[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "De Nueva York a Tokio",
    "section": "",
    "text": "Hola, soy Anaïs Rosschaert Loyson\nEsta web sirve para presentar el trabajo final individual para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nMi trabajo lleva por título : “De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá”. El objetivo es explorar los mayores logros conseguidos por grandes atletas en maratones oficiales, analizar las “Six Majors” y en especial, el Maratón de Boston, el más antiguo de los “Majors”.\nEl trabajo puede verse aquí."
  },
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "",
    "text": "Six Majors"
  },
  {
    "objectID": "my_trabajo_BigData.html#intro",
    "href": "my_trabajo_BigData.html#intro",
    "title": "Los pingüinos molan",
    "section": "",
    "text": "Vamos a utilizar datos del paquete palmerpenguins. El repo del paquete en CRAN está aquí, el repo de Github está aquí y la página web del paquete está aquí.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\nCódigo# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndf &lt;- palmerpenguins::penguins\n\n\nEl dataset contiene observaciones sobre un conjunto de 344 pingüinos de 3 especies. Hay 8 variables."
  },
  {
    "objectID": "my_trabajo_BigData.html#los-pingüinos-molan",
    "href": "my_trabajo_BigData.html#los-pingüinos-molan",
    "title": "Los pingüinos molan",
    "section": "Los pingüinos molan",
    "text": "Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\n\nUn pingüino chulo\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "my_trabajo_BigData.html#algunos-gráficos",
    "href": "my_trabajo_BigData.html#algunos-gráficos",
    "title": "Los pingüinos molan",
    "section": "Algunos gráficos",
    "text": "Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nCódigolibrary(tidyverse)\n\n\nArreglo los datos\n\nCódigo#- cojos datos de pingüinos y arreglo un poco \ndf &lt;- palmerpenguins::penguins %&gt;% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %&gt;% \n  tidyr::drop_na()\n\n\n\nPrimer gráfico\n\nCódigo#- primer gráfico\np &lt;- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\nSegundo\n\nCódigo#- segundo gráfico\np &lt;- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\nEl último\n\nCódigo#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 11 x64 (build 22621)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2024-01-21\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version date (UTC) lib source\n cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.1)\n clipr            0.8.0   2022-02-22 [1] CRAN (R 4.3.1)\n colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.1)\n desc             1.4.2   2022-09-08 [1] CRAN (R 4.3.1)\n details          0.3.0   2022-03-27 [1] CRAN (R 4.3.2)\n digest           0.6.33  2023-07-07 [1] CRAN (R 4.3.1)\n dplyr          * 1.1.3   2023-09-03 [1] CRAN (R 4.3.1)\n evaluate         0.21    2023-05-05 [1] CRAN (R 4.3.1)\n fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.1)\n farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.1)\n fastmap          1.1.1   2023-02-24 [1] CRAN (R 4.3.1)\n forcats        * 1.0.0   2023-01-29 [1] CRAN (R 4.3.1)\n generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.1)\n ggplot2        * 3.4.4   2023-10-12 [1] CRAN (R 4.3.2)\n glue             1.6.2   2022-02-24 [1] CRAN (R 4.3.1)\n gtable           0.3.4   2023-08-21 [1] CRAN (R 4.3.1)\n hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.1)\n htmltools        0.5.6   2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.1)\n httr             1.4.7   2023-08-15 [1] CRAN (R 4.3.1)\n jsonlite         1.8.7   2023-06-29 [1] CRAN (R 4.3.1)\n knitr            1.45    2023-10-30 [1] CRAN (R 4.3.2)\n labeling         0.4.3   2023-08-29 [1] CRAN (R 4.3.1)\n lattice          0.21-8  2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle        1.0.4   2023-11-07 [1] CRAN (R 4.3.2)\n lubridate      * 1.9.2   2023-02-10 [1] CRAN (R 4.3.1)\n magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.1)\n Matrix           1.6-1.1 2023-09-18 [1] CRAN (R 4.3.1)\n mgcv             1.8-42  2023-03-02 [2] CRAN (R 4.3.1)\n munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.1)\n nlme             3.1-162 2023-01-31 [2] CRAN (R 4.3.1)\n palmerpenguins * 0.1.1   2022-08-15 [1] CRAN (R 4.3.1)\n pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.1)\n pkgconfig        2.0.3   2019-09-22 [1] CRAN (R 4.3.1)\n png              0.1-8   2022-11-29 [1] CRAN (R 4.3.0)\n purrr          * 1.0.2   2023-08-10 [1] CRAN (R 4.3.1)\n R6               2.5.1   2021-08-19 [1] CRAN (R 4.3.1)\n readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.1)\n rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.1)\n rmarkdown        2.24    2023-08-14 [1] CRAN (R 4.3.1)\n rprojroot        2.0.3   2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi       0.15.0  2023-07-07 [1] CRAN (R 4.3.1)\n scales           1.2.1   2022-08-20 [1] CRAN (R 4.3.2)\n sessioninfo      1.2.2   2021-12-06 [1] CRAN (R 4.3.2)\n stringi          1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr        * 1.5.0   2022-12-02 [1] CRAN (R 4.3.1)\n tibble         * 3.2.1   2023-03-20 [1] CRAN (R 4.3.1)\n tidyr          * 1.3.0   2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse      * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)\n timechange       0.2.0   2023-01-11 [1] CRAN (R 4.3.1)\n tzdb             0.4.0   2023-05-12 [1] CRAN (R 4.3.1)\n utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.1)\n vctrs            0.6.3   2023-06-14 [1] CRAN (R 4.3.1)\n withr            2.5.2   2023-10-30 [1] CRAN (R 4.3.2)\n xfun             0.40    2023-08-09 [1] CRAN (R 4.3.1)\n xml2             1.3.5   2023-07-06 [1] CRAN (R 4.3.1)\n yaml             2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] C:/Users/LENOVO/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "my_trabajo_BigData.html#datos",
    "href": "my_trabajo_BigData.html#datos",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "Datos",
    "text": "Datos\nPara este estudio, se ha recopilado información de la página web de World Athletics y de Kaggle. El enfoque principal se centra en analizar datos relacionados con los tiempos de llegada de destacados atletas en una de las pruebas más desafiantes: el maratón.\nCon el fin de garantizar la integridad de los datos y evitar posibles complicaciones derivadas de modificaciones, la información extraída de la página web de World Athletics se descargó el 17 de enero de 2024. Este proceso se llevó a cabo utilizando funciones como read_html y html_table, y los datos se han gestionado desde los archivos generados en esa fecha específica.\nEn términos de limpieza y manipulación de datos, se destacan las consideraciones especiales aplicadas a variables como el tiempo en meta y el ritmo medio, que se presentaban en formato sexagesimal. Para convertir estas variables a “numeric” y así poder realizar este análisis, se han considerado estas dos variables como tiempo en segundos. Además, se ha llevado a cabo una homogeneización del nombre y formato de las variables.\n\nCódigo#Librerías\n\nlibrary(tidyverse)\nlibrary(rio)\nlibrary(dplyr)\nlibrary(rvest)\nlibrary(stringr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(\"rnaturalearth\")\nlibrary(\"rnaturalearthdata\")\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(ggthemes)\nlibrary(plotly)\n\n#Cargando todos los dfs en el global\n\ndata_boston_fem &lt;- rio::import(here::here(\"datos\", \"Womens_Boston_Marathon_Winners.csv\"))\ndata_boston_masc &lt;- rio::import(here::here(\"datos\", \"Mens_Boston_Marathon_Winners.csv\"))\ndata_majors &lt;- rio::import(here::here(\"datos\", \"world_marathon_majors.csv\"))\n\ndata_records_maraton_masc &lt;- rio::import(here::here(\"datos\", \"Records_Maraton_Masc.csv\"))\ndata_records_maraton_fem &lt;- rio::import(here::here(\"datos\", \"Records_Maraton_Fem.csv\"))\n\ndata_records_fem &lt;- rio::import(here::here(\"datos\", \"Records_Fem.csv\"))\ndata_records_masc &lt;- rio::import(here::here(\"datos\", \"Records_Masc.csv\"))\n\n#Limpiando y preparando datos\n\n#La parte clave de la preparación de datos es conseguir crear una nueva columna donde nos indique la velocidad media de cada corredor en minutos y segundos por km (mm:ss/km). Para ello hay que tener en cuenta la particularidad del sistema sexagesimal a la hora de crear esta nueva variable.\n\n#Además homogeneizaremos el nombre de las variables y eliminaremos aquellas que no sean relevantes\n\n#Boston femenino\n\ndata_boston_fem &lt;- data_boston_fem %&gt;%\n  select(-\"Distance (Miles)\") %&gt;%\n  rename(Athlete = \"Winner\", Nationality = \"Country\", Distance = \"Distance (KM)\") %&gt;%\n  mutate(Time_In_Seconds = as.numeric(ifelse(grepl(\":\", as.character(Time)), \n                                             sapply(strsplit(as.character(Time), \":\"), \n                                                    function(x) sum(as.numeric(x) * c(3600, 60, 1))),\n                                             NA)),\n         Pace_Seconds = Time_In_Seconds / Distance,\n         Pace = ifelse(is.finite(Pace_Seconds), sprintf(\"%02d:%02d\", as.integer(floor(Pace_Seconds / 60)), as.integer(Pace_Seconds %% 60)), NA),\n         .after = \"Distance\") %&gt;%\n  slice(-55) %&gt;%\n  relocate(Pace, .after = \"Distance\") \n\ncolnames(data_boston_fem) &lt;- tolower(colnames(data_boston_fem))\n\n#data_boston_fem &lt;- data_boston_fem %&gt;%\n  #select(-c(\"time_in_seconds\", \"pace_seconds\"))\n\n#Boston fmasculino\n\ndata_boston_masc &lt;- data_boston_masc %&gt;%\n  select(-\"Distance (Miles)\") %&gt;%\n  rename(Athlete = \"Winner\", Nationality = \"Country\", Distance = \"Distance (KM)\") %&gt;%\n  mutate(Time_In_Seconds = as.numeric(ifelse(grepl(\":\", as.character(Time)), \n                                           sapply(strsplit(as.character(Time), \":\"), \n                                                  function(x) sum(as.numeric(x) * c(3600, 60, 1))),\n                                           NA)),\n         Pace_Seconds = Time_In_Seconds / Distance,\n         Pace = ifelse(is.finite(Pace_Seconds), sprintf(\"%02d:%02d\", as.integer(floor(Pace_Seconds / 60)), as.integer(Pace_Seconds %% 60)), NA),\n         .after = \"Distance\") %&gt;%\n  slice(-124) %&gt;%\n  relocate(Pace, .after = \"Distance\") \n\ncolnames(data_boston_masc) &lt;- tolower(colnames(data_boston_masc)) \n\n#data_boston_masc &lt;- data_boston_masc %&gt;%\n  #select(-c(\"time_in_seconds\", \"pace_seconds\"))\n\n\n#Six majors (ganadores/as de cada edición)\n\ndata_majors &lt;- data_majors %&gt;%\n  rename(athlete = \"winner\", nationality = \"country\") %&gt;%\n  mutate(distance = 42.195) %&gt;%\n  mutate(time_in_seconds = as.numeric(ifelse(grepl(\":\", as.character(time)), \n                                             sapply(strsplit(as.character(time), \":\"), \n                                                    function(x) sum(as.numeric(x) * c(3600, 60, 1))),\n                                             NA)),\n         pace_seconds = time_in_seconds / distance,\n         pace = ifelse(is.finite(pace_seconds), sprintf(\"%02d:%02d\", as.integer(floor(pace_seconds / 60)), as.integer(pace_seconds %% 60)), NA),\n         .after = \"distance\") %&gt;%\n  relocate(pace, .after = \"distance\")\n\n#data_majors &lt;- data_majors %&gt;%\n  #select(-c(\"time_in_seconds\", \"pace_seconds\"))\n\n\n#Records maratones masculino\n\n\ndata_records_maraton_masc &lt;- data_records_maraton_masc %&gt;%\n  select(-c(Rank, WIND, Pos, V8, \"Results Score\")) %&gt;%\n  rename(nationality = Nat, date_of_birth = DOB, time = Mark, marathon = Venue) %&gt;%\n  setNames(tolower(names(.))) %&gt;%\n  relocate(date, nationality, time, date_of_birth) %&gt;%\n  separate(competitor, into = c(\"name\", \"athlete\"), sep = \" \", remove = FALSE) %&gt;%\n  relocate(name, athlete, .after = \"competitor\") %&gt;%\n  mutate(distance = 42.195,\n         time_in_seconds = as.numeric(ifelse(grepl(\":\", as.character(time)), \n                                             sapply(strsplit(as.character(time), \":\"), \n                                                    function(x) sum(as.numeric(x) * c(3600, 60, 1))),\n                                             NA)),\n         pace_seconds = time_in_seconds / distance,\n         pace = ifelse(is.finite(pace_seconds), sprintf(\"%02d:%02d\", as.integer(floor(pace_seconds / 60)), as.integer(pace_seconds %% 60)), NA),\n         .after = \"time\") %&gt;%\n  relocate(pace, .after = \"time\") %&gt;%\n  select(-c(\"time_in_seconds\", \"pace_seconds\"))\n\n#Vamos a cambiar las fechas para que sean consideradas como \"date\" en vez de character\n\ndata_records_maraton_masc &lt;- data_records_maraton_masc %&gt;%\n  separate(date, into = c(\"day\", \"month\", \"year\"), sep = \" \") %&gt;%\n  separate(date_of_birth, into = c(\"day\", \"month\", \"year_of_birth\"), sep = \" \") %&gt;%\n  select(-c(day, month)) %&gt;%\n  mutate(year = as.numeric(year),\n         year_of_birth = as.numeric(year_of_birth))\n\n\n#Records maratones femenino\n\ndata_records_maraton_fem &lt;- data_records_maraton_fem %&gt;%\n  select(-c(Rank, WIND, Pos, V8, \"Results Score\")) %&gt;%\n  rename(nationality = Nat, date_of_birth = DOB, time = Mark, marathon = Venue) %&gt;%\n  setNames(tolower(names(.))) %&gt;%\n  relocate(date, nationality, time, date_of_birth) %&gt;%\n  separate(competitor, into = c(\"name\", \"athlete\"), sep = \" \", remove = FALSE) %&gt;%\n  relocate(name, athlete, .after = \"competitor\") %&gt;%\n  mutate(distance = 42.195,\n         time_in_seconds = as.numeric(ifelse(grepl(\":\", as.character(time)), \n                                             sapply(strsplit(as.character(time), \":\"), \n                                                    function(x) sum(as.numeric(x) * c(3600, 60, 1))),\n                                             NA)),\n         pace_seconds = time_in_seconds / distance,\n         pace = ifelse(is.finite(pace_seconds), sprintf(\"%02d:%02d\", as.integer(floor(pace_seconds / 60)), as.integer(pace_seconds %% 60)), NA),\n         .after = \"time\") %&gt;%\n  relocate(pace, .after = \"time\") %&gt;%\n  select(-c(\"time_in_seconds\", \"pace_seconds\"))\n\n#Vamos a cambiar las fechas para que sean consideradas como \"date\" en vez de character\n\ndata_records_maraton_fem &lt;- data_records_maraton_fem %&gt;%\n  separate(date, into = c(\"day\", \"month\", \"year\"), sep = \" \") %&gt;%\n  separate(date_of_birth, into = c(\"day\", \"month\", \"year_of_birth\"), sep = \" \") %&gt;%\n  select(-c(day, month)) %&gt;%\n  mutate(year = as.numeric(year),\n         year_of_birth = as.numeric(year_of_birth))"
  },
  {
    "objectID": "my_trabajo_BigData.html#top-100-mejores-tiempos-oficiales-en-maratón",
    "href": "my_trabajo_BigData.html#top-100-mejores-tiempos-oficiales-en-maratón",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "Top 100 mejores tiempos (oficiales) en maratón",
    "text": "Top 100 mejores tiempos (oficiales) en maratón\nEste análisis de los 100 mejores tiempos revela la constante evolución y la proximidad de los atletas a fronteras aparentemente inalcanzables. La narrativa del maratón se teje con emoción, récords y la búsqueda incansable de la excelencia, prometiendo un futuro emocionante para este deporte apasionante.\n\nCódigo#Ranking top 100----\n\n\n# En primer lugar, arreglo los datos para la tabla. Selecciono el top 5 y las variables que quiero representar\ntop100_masc &lt;- head(data_records_maraton_masc, 100) %&gt;%\n  mutate(position = c(1:100)) %&gt;%\n  select(position, athlete, nationality, time, pace, marathon) %&gt;%\n  setNames(toupper(names(.)))\n\n\n# Creamos la tabla del top 5 mejores tiempos masculinos\n\ntabla_top100_masc &lt;- top100_masc %&gt;%\n  kable(\"html\", align = \"l\", caption = \"TOP 100 MEJORES TIEMPOS DE MARATÓN MASCULINO\") %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = T) %&gt;%\n  scroll_box(width = \"100%\", height = \"300px\")\n\ntabla_top100_masc\n\n\n\nTOP 100 MEJORES TIEMPOS DE MARATÓN MASCULINO\n\nPOSITION\nATHLETE\nNATIONALITY\nTIME\nPACE\nMARATHON\n\n\n\n1\nKelvin KIPTUM\nKEN\n2:00:35\n02:51\nChicago, IL (USA)\n\n\n2\nEliud KIPCHOGE\nKEN\n2:01:09\n02:52\nBerlin (GER)\n\n\n3\nKenenisa BEKELE\nETH\n2:01:41\n02:53\nBerlin (GER)\n\n\n4\nSisay LEMMA\nETH\n2:01:48\n02:53\nValencia (ESP)\n\n\n5\nBirhanu LEGESE\nETH\n2:02:48\n02:54\nBerlin (GER)\n\n\n6\nMosinet GEREMEW\nETH\n2:02:55\n02:54\nLondon (GBR)\n\n\n7\nDennis KIMETTO\nKEN\n2:02:57\n02:54\nBerlin (GER)\n\n\n8\nEvans CHEBET\nKEN\n2:03:00\n02:54\nValencia (ESP)\n\n\n9\nGabriel Gerald GEAY\nTAN\n2:03:00\n02:54\nValencia (ESP)\n\n\n10\nLawrence CHERONO\nKEN\n2:03:04\n02:54\nValencia (ESP)\n\n\n11\nAlexander Mutiso MUNYAO\nKEN\n2:03:11\n02:55\nValencia (ESP)\n\n\n12\nEmmanuel MUTAI\nKEN\n2:03:13\n02:55\nBerlin (GER)\n\n\n13\nWilson Kipsang KIPROTICH\nKEN\n2:03:13\n02:55\nBerlin (GER)\n\n\n14\nAmos KIPRUTO\nKEN\n2:03:13\n02:55\nTokyo (JPN)\n\n\n15\nVincent Kipkemoi NGETICH\nKEN\n2:03:13\n02:55\nBerlin (GER)\n\n\n16\nMule WASIHUN\nETH\n2:03:16\n02:55\nLondon (GBR)\n\n\n17\nTadese TAKELE\nETH\n2:03:24\n02:55\nBerlin (GER)\n\n\n18\nGetaneh MOLLA\nETH\n2:03:34\n02:55\nDubai (UAE)\n\n\n19\nBashir ABDI\nBEL\n2:03:36\n02:55\nRotterdam (NED)\n\n\n20\nPatrick Makau MUSYOKI\nKEN\n2:03:38\n02:55\nBerlin (GER)\n\n\n21\nTamirat TOLA\nETH\n2:03:39\n02:55\nAmsterdam (NED)\n\n\n22\nHerpasa NEGASA\nETH\n2:03:40\n02:55\nDubai (UAE)\n\n\n23\nGuye Idemo ADOLA\nETH\n2:03:46\n02:55\nBerlin (GER)\n\n\n24\nDawit WOLDE\nETH\n2:03:48\n02:56\nValencia (ESP)\n\n\n25\nTimothy KIPLAGAT\nKEN\n2:03:50\n02:56\nRotterdam (NED)\n\n\n26\nStanley Kipleting BIWOTT\nKEN\n2:03:51\n02:56\nLondon (GBR)\n\n\n27\nKinde ATANAW\nETH\n2:03:51\n02:56\nValencia (ESP)\n\n\n28\nReuben Kiprop KIPYEGO\nKEN\n2:03:55\n02:56\nMilano (ITA)\n\n\n29\nHaile GEBRSELASSIE\nETH\n2:03:59\n02:56\nBerlin (GER)\n\n\n30\nLeul GEBRESILASE\nETH\n2:04:02\n02:56\nDubai (UAE)\n\n\n31\nBenson KIPRUTO\nKEN\n2:04:02\n02:56\nChicago, IL (USA)\n\n\n32\nMarius KIPSEREM\nKEN\n2:04:04\n02:56\nRotterdam (NED)\n\n\n33\nAsefa MENGSTU\nETH\n2:04:06\n02:56\nDubai (UAE)\n\n\n34\nBernard Kiprop KOECH\nKEN\n2:04:09\n02:56\nAmsterdam (NED)\n\n\n35\nGeoffrey MUTAI\nKEN\n2:04:15\n02:56\nBerlin (GER)\n\n\n36\nKaan Kigen ÖZBILEN\nTUR\n2:04:16\n02:56\nValencia (ESP)\n\n\n37\nBarnabas KIPTUM\nKEN\n2:04:17\n02:56\nMilano (ITA)\n\n\n38\nJoshua BELET\nKEN\n2:04:18\n02:56\nAmsterdam (NED)\n\n\n39\nElisha ROTICH\nKEN\n2:04:21\n02:56\nParis (FRA)\n\n\n40\nRonald KORIR\nKEN\n2:04:22\n02:56\nBerlin (GER)\n\n\n41\nAyele ABSHERO\nETH\n2:04:23\n02:56\nDubai (UAE)\n\n\n42\nGeoffrey KAMWOROR\nKEN\n2:04:23\n02:56\nLondon (GBR)\n\n\n43\nTesfaye ABERA\nETH\n2:04:24\n02:56\nDubai (UAE)\n\n\n44\nDuncan KIBET\nKEN\n2:04:27\n02:56\nRotterdam (NED)\n\n\n45\nJames Kipsang KWAMBAI\nKEN\n2:04:27\n02:56\nRotterdam (NED)\n\n\n46\nSammy KITWARA\nKEN\n2:04:28\n02:56\nChicago, IL (USA)\n\n\n47\nVincent KIPCHUMBA\nKEN\n2:04:28\n02:56\nLondon (GBR)\n\n\n48\nSeifu TURA\nETH\n2:04:29\n02:57\nMilano (ITA)\n\n\n49\nTsegaye MEKONNEN\nETH\n2:04:32\n02:57\nDubai (UAE)\n\n\n50\nDickson CHUMBA\nKEN\n2:04:32\n02:57\nChicago, IL (USA)\n\n\n51\nJonathan Kipleting KORIR\nKEN\n2:04:32\n02:57\nAmsterdam (NED)\n\n\n52\nHayle LEMI\nETH\n2:04:33\n02:57\nDubai (UAE)\n\n\n53\nCyBrian KOTUT\nKEN\n2:04:34\n02:57\nAmsterdam (NED)\n\n\n54\nHiskel TEWELDE\nERI\n2:04:35\n02:57\nAmsterdam (NED)\n\n\n55\nBethwel KIBET\nKEN\n2:04:37\n02:57\nAmsterdam (NED)\n\n\n56\nTsegaye KEBEDE\nETH\n2:04:38\n02:57\nChicago, IL (USA)\n\n\n57\nSolomon DEKSISA\nETH\n2:04:40\n02:57\nAmsterdam (NED)\n\n\n58\nHailemaryam KIROS\nETH\n2:04:41\n02:57\nParis (FRA)\n\n\n59\nHaftu TEKLU\nETH\n2:04:42\n02:57\nBerlin (GER)\n\n\n60\nEl Hassan EL ABBASSI\nBRN\n2:04:43\n02:57\nValencia (ESP)\n\n\n61\nAsrar HIYRDEN\nETH\n2:04:43\n02:57\nSevilla (ESP)\n\n\n62\nHillary KIPSAMBU\nKEN\n2:04:44\n02:57\nParis (FRA)\n\n\n63\nAndualem BELAY\nETH\n2:04:44\n02:57\nBerlin (GER)\n\n\n64\nLelisa DESISA\nETH\n2:04:45\n02:57\nDubai (UAE)\n\n\n65\nTitus EKIRU\nKEN\n2:04:46\n02:57\nMilano (ITA)\n\n\n66\nMekuant AYENEW\nETH\n2:04:46\n02:57\nSevilla (ESP)\n\n\n67\nYemane TSEGAY\nETH\n2:04:48\n02:57\nRotterdam (NED)\n\n\n68\nBerhanu SHIFERAW\nETH\n2:04:48\n02:57\nDubai (UAE)\n\n\n69\nBarselius KIPYEGO\nKEN\n2:04:48\n02:57\nParis (FRA)\n\n\n70\nStephen KISSA\nUGA\n2:04:48\n02:57\nHamburg (GER)\n\n\n71\nKibiwott KANDIE\nKEN\n2:04:48\n02:57\nValencia (ESP)\n\n\n72\nTadesse TOLA\nETH\n2:04:49\n02:57\nDubai (UAE)\n\n\n73\nShura KITATA\nETH\n2:04:49\n02:57\nLondon (GBR)\n\n\n74\nTsegaye GETACHEW\nETH\n2:04:49\n02:57\nAmsterdam (NED)\n\n\n75\nDino SEFIR\nETH\n2:04:50\n02:57\nDubai (UAE)\n\n\n76\nGetu FELEKE\nETH\n2:04:50\n02:57\nRotterdam (NED)\n\n\n77\nAbebe NEGEWO\nETH\n2:04:51\n02:57\nValencia (ESP)\n\n\n78\nDaniel DO NASCIMENTO\nBRA\n2:04:51\n02:57\nSeoul (KOR)\n\n\n79\nFeyisa LILESA\nETH\n2:04:52\n02:57\nChicago, IL (USA)\n\n\n80\nEndeshaw NEGESSE\nETH\n2:04:52\n02:57\nDubai (UAE)\n\n\n81\nKenneth Kiprop KIPKEMOI\nKEN\n2:04:52\n02:57\nEindhoven (NED)\n\n\n82\nMathew Kipkoech KISORIO\nKEN\n2:04:53\n02:57\nValencia (ESP)\n\n\n83\nChalu DESO\nETH\n2:04:53\n02:57\nValencia (ESP)\n\n\n84\nAbayneh DEGU\nETH\n2:04:53\n02:57\nParis (FRA)\n\n\n85\nBrimin KIPKORIR\nKEN\n2:04:53\n02:57\nFrankfurt (GER)\n\n\n86\nMarkos GENETI\nETH\n2:04:54\n02:57\nDubai (UAE)\n\n\n87\nTitus KIPRUTO\nKEN\n2:04:54\n02:57\nAmsterdam (NED)\n\n\n88\nPaul TERGAT\nKEN\n2:04:55\n02:57\nBerlin (GER)\n\n\n89\nSammy Kipchoge KORIR\nKEN\n2:04:56\n02:57\nBerlin (GER)\n\n\n90\nJonathan MAIYO\nKEN\n2:04:56\n02:57\nDubai (UAE)\n\n\n91\nKengo SUZUKI\nJPN\n2:04:56\n02:57\nOtsu (JPN)\n\n\n92\nAbdi NAGEEYE\nNED\n2:04:56\n02:57\nRotterdam (NED)\n\n\n93\nPhilemon KIPLIMO\nKEN\n2:04:56\n02:57\nBerlin (GER)\n\n\n94\nBazezew ASMARE\nETH\n2:04:57\n02:57\nAmsterdam (NED)\n\n\n95\nAmanal PETROS\nGER\n2:04:58\n02:57\nBerlin (GER)\n\n\n96\nGadisa BIRHANU\nETH\n2:04:59\n02:57\nSevilla (ESP)\n\n\n97\nPhilemon RONO\nKEN\n2:05:00\n02:57\nToronto (CAN)\n\n\n98\nNicholas KIRWA\nKEN\n2:05:01\n02:57\nMilano (ITA)\n\n\n99\nJohn KORIR\nKEN\n2:05:01\n02:57\nChicago, IL (USA)\n\n\n100\nAddisu GOBENA\nETH\n2:05:01\n02:57\nDubai (UAE)\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\n\n\n\nEl éxito del maratón ha experimentado un ascenso impresionante, y los registros de los 100 mejores tiempos oficiales ilustran la constante búsqueda de la excelencia. En la categoría masculina, la proximidad a la mítica barrera de las 2 horas se ha vuelto más palpable con actuaciones notables. Kelvin Kiptum, con su sorprendente tiempo de 2:00:35 en Chicago, ha acariciado este límite simbólico, sugiriendo la posibilidad de que un atleta pueda superar esta marca histórica en un futuro no tan lejano.\nEn este contexto, la figura emblemática de Eliud Kipchoge no puede pasarse por alto. Kipchoge, uno de los corredores más reconocidos mundialmente, ha dejado una marca permanente en la historia del maratón. Aunque actualmente ocupa la segunda posición con un tiempo de 2:01:09 en Berlín, su legado es incuestionable dado que durante 131 semanas, Kipchoge mantuvo el récord, hasta que Kiptum lo superó a finales de 2023. Es esencial mencionar que Kipchoge, en una hazaña extraordinaria, batió el “muro” de las 2 horas con un tiempo de 1:59:40 en el maratón de Viena en 2019. Sin embargo, esta marca no se considera oficial, ya que el atleta contó con la asistencia de 41 “pacers” que se turnaban para marcar el ritmo necesario, planteando ciertas controversias en torno a su estatus.\n\nCódigo# Y ahora seguiremos los mismos pasos para la categoría femenina\n\ntop100_fem &lt;- head(data_records_maraton_fem, 100) %&gt;%\n  mutate(position = c(1:100)) %&gt;%\n  select(position, athlete, nationality, time, pace, marathon) %&gt;%\n  setNames(toupper(names(.)))\n\ntabla_top100_fem &lt;- top100_fem %&gt;%\n  kable(\"html\", align = \"l\", caption = \"TOP 100 MEJORES TIEMPOS DE MARATÓN FEMENINO\") %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = T) %&gt;%\n  scroll_box(width = \"100%\", height = \"300px\")\n\ntabla_top100_fem\n\n\n\nTOP 100 MEJORES TIEMPOS DE MARATÓN FEMENINO\n\nPOSITION\nATHLETE\nNATIONALITY\nTIME\nPACE\nMARATHON\n\n\n\n1\nTigst ASSEFA\nETH\n2:11:53\n03:07\nBerlin (GER)\n\n\n2\nSifan HASSAN\nNED\n2:13:44\n03:10\nChicago, IL (USA)\n\n\n3\nBrigid KOSGEI\nKEN\n2:14:04\n03:10\nChicago, IL (USA)\n\n\n4\nRuth CHEPNGETICH\nKEN\n2:14:18\n03:10\nChicago, IL (USA)\n\n\n5\nAmane Beriso SHANKULE\nETH\n2:14:58\n03:11\nValencia (ESP)\n\n\n6\nPaula RADCLIFFE\nGBR\n2:15:25\n03:12\nLondon (GBR)\n\n\n7\nWorknesh DEGEFA\nETH\n2:15:51\n03:13\nValencia (ESP)\n\n\n8\nTigist KETEMA\nETH\n2:16:07\n03:13\nDubai (UAE)\n\n\n9\nAlmaz AYANA\nETH\n2:16:22\n03:13\nValencia (ESP)\n\n\n10\nRosemary WANJIRU\nKEN\n2:16:28\n03:14\nTokyo (JPN)\n\n\n11\nLetesenbet GIDEY\nETH\n2:16:49\n03:14\nValencia (ESP)\n\n\n12\nTsehay GEMECHU\nETH\n2:16:56\n03:14\nTokyo (JPN)\n\n\n13\nMary Jepkosgei KEITANY\nKEN\n2:17:01\n03:14\nLondon (GBR)\n\n\n14\nMegertu ALEMU\nETH\n2:17:09\n03:15\nChicago, IL (USA)\n\n\n15\nPeres JEPCHIRCHIR\nKEN\n2:17:16\n03:15\nValencia (ESP)\n\n\n16\nYalemzerf YEHUALAW\nETH\n2:17:23\n03:15\nHamburg (GER)\n\n\n17\nJoyciline JEPKOSGEI\nKEN\n2:17:23\n03:15\nChicago, IL (USA)\n\n\n18\nSheila CHEPKIRUI\nKEN\n2:17:29\n03:15\nValencia (ESP)\n\n\n19\nTadu TESHOME\nETH\n2:17:36\n03:15\nValencia (ESP)\n\n\n20\nLonah Chemtai SALPETER\nISR\n2:17:45\n03:15\nTokyo (JPN)\n\n\n21\nTirunesh DIBABA\nETH\n2:17:56\n03:16\nLondon (GBR)\n\n\n22\nAngela TANUI\nKEN\n2:17:57\n03:16\nAmsterdam (NED)\n\n\n23\nDegitu AZIMERAW\nETH\n2:17:58\n03:16\nLondon (GBR)\n\n\n24\nAshete BEKERE\nETH\n2:17:58\n03:16\nTokyo (JPN)\n\n\n25\nHiwot GEBREKIDAN\nETH\n2:17:59\n03:16\nValencia (ESP)\n\n\n26\nTigist ABAYECHEW\nETH\n2:18:03\n03:16\nBerlin (GER)\n\n\n27\nJoan Chelimo MELLY\nROU\n2:18:04\n03:16\nSeoul (KOR)\n\n\n28\nGenzebe DIBABA\nETH\n2:18:05\n03:16\nAmsterdam (NED)\n\n\n29\nRuti AGA\nETH\n2:18:09\n03:16\nDongying (CHN)\n\n\n30\nGladys CHERONO\nKEN\n2:18:11\n03:16\nBerlin (GER)\n\n\n31\nGotytom GEBRESLASE\nETH\n2:18:11\n03:16\nAutzen Complex, Eugene, OR (USA)\n\n\n32\nFancy CHEMUTAI\nKEN\n2:18:11\n03:16\nValencia (ESP)\n\n\n33\nSutume Asefa KEBEDE\nETH\n2:18:12\n03:16\nSeoul (KOR)\n\n\n34\nJudith Jeptum KORIR\nKEN\n2:18:20\n03:16\nAutzen Complex, Eugene, OR (USA)\n\n\n35\nMeseret BELETE\nETH\n2:18:21\n03:16\nAmsterdam (NED)\n\n\n36\nEmily SISSON\nUSA\n2:18:29\n03:16\nChicago, IL (USA)\n\n\n37\nRoza DEREJE\nETH\n2:18:30\n03:16\nValencia (ESP)\n\n\n38\nVivian Jepkemei CHERUIYOT\nKEN\n2:18:31\n03:16\nLondon (GBR)\n\n\n39\nAzmera ABREHA\nETH\n2:18:33\n03:17\nValencia (ESP)\n\n\n40\nBirhane DIBABA\nETH\n2:18:35\n03:17\nTokyo (JPN)\n\n\n41\nMagdalena SHAURI\nTAN\n2:18:41\n03:17\nBerlin (GER)\n\n\n42\nCatherine NDEREBA\nKEN\n2:18:47\n03:17\nChicago, IL (USA)\n\n\n43\nTiruye MESFIN\nETH\n2:18:47\n03:17\nValencia (ESP)\n\n\n44\nWorkenesh EDESA\nETH\n2:18:51\n03:17\nBerlin (GER)\n\n\n45\nTigist GIRMA\nETH\n2:18:52\n03:17\nValencia (ESP)\n\n\n46\nTiki GELANA\nETH\n2:18:58\n03:17\nRotterdam (NED)\n\n\n47\nZeineba YIMER\nETH\n2:19:07\n03:17\nBerlin (GER)\n\n\n48\nValary JEMELI\nKEN\n2:19:10\n03:17\nFrankfurt (GER)\n\n\n49\nMizuki NOGUCHI\nJPN\n2:19:12\n03:17\nBerlin (GER)\n\n\n50\nKeira D'AMATO\nUSA\n2:19:12\n03:17\nHouston, TX (USA)\n\n\n51\nIrina MIKITENKO\nGER\n2:19:19\n03:18\nBerlin (GER)\n\n\n52\nSenbere TEFERI\nETH\n2:19:21\n03:18\nBerlin (GER)\n\n\n53\nHitomi NIIYA\nJPN\n2:19:24\n03:18\nHouston, TX (USA)\n\n\n54\nDera DIDA\nETH\n2:19:24\n03:18\nBerlin (GER)\n\n\n55\nBuzunesh GETACHEW\nETH\n2:19:27\n03:18\nFrankfurt (GER)\n\n\n56\nBoru Feyse TADESE\nETH\n2:19:30\n03:18\nDubai (UAE)\n\n\n57\nAsselefech MEDESSA MERGIA\nETH\n2:19:31\n03:18\nDubai (UAE)\n\n\n58\nNancy JELAGAT\nKEN\n2:19:31\n03:18\nValencia (ESP)\n\n\n59\nRahma TUSA\nETH\n2:19:33\n03:18\nHouston, TX (USA)\n\n\n60\nLucy Kabuu WANGUI\nKEN\n2:19:34\n03:18\nDubai (UAE)\n\n\n61\nDeena KASTOR\nUSA\n2:19:36\n03:18\nLondon (GBR)\n\n\n62\nYebrgual MELESE\nETH\n2:19:36\n03:18\nDubai (UAE)\n\n\n63\nYingjie SUN\nCHN\n2:19:39\n03:18\nBeijing (CHN)\n\n\n64\nYoko SHIBUI\nJPN\n2:19:41\n03:18\nBerlin (GER)\n\n\n65\nTirfi TSEGAYE\nETH\n2:19:41\n03:18\nDubai (UAE)\n\n\n66\nFlorence KIPLAGAT\nKEN\n2:19:44\n03:18\nBerlin (GER)\n\n\n67\nHelen BEKELE\nETH\n2:19:44\n03:18\nBerlin (GER)\n\n\n68\nNaoko TAKAHASHI\nJPN\n2:19:46\n03:18\nBerlin (GER)\n\n\n69\nSarah CHEPCHIRCHIR\nKEN\n2:19:47\n03:18\nTokyo (JPN)\n\n\n70\nEdna Ngeringwony KIPLAGAT\nKEN\n2:19:50\n03:18\nLondon (GBR)\n\n\n71\nMeseret ABEBAYAHAU\nETH\n2:19:50\n03:18\nAmsterdam (NED)\n\n\n72\nChunxiu ZHOU\nCHN\n2:19:51\n03:18\nSeoul (KOR)\n\n\n73\nMare DIBABA\nETH\n2:19:52\n03:18\nDubai (UAE)\n\n\n74\nHelalia JOHANNES\nNAM\n2:19:52\n03:18\nValencia (ESP)\n\n\n75\nVicoty CHEPNGENO\nKEN\n2:19:55\n03:18\nHouston, TX (USA)\n\n\n76\nRita Jeptoo SITIENEI\nKEN\n2:19:57\n03:19\nChicago, IL (USA)\n\n\n77\nEunice Chebichii CHUMBA\nBRN\n2:20:02\n03:19\nSeoul (KOR)\n\n\n78\nDorcas Jepchirchir TUITOEK\nKEN\n2:20:02\n03:19\nAmsterdam (NED)\n\n\n79\nEtagegne WOLDU\nETH\n2:20:03\n03:19\nValencia (ESP)\n\n\n80\nSelly Chepyego KAPTICH\nKEN\n2:20:03\n03:19\nBarcelona (ESP)\n\n\n81\nCelestine CHEPCHIRCHIR\nKEN\n2:20:10\n03:19\nSeoul (KOR)\n\n\n82\nGutemi Shone IMANA\nETH\n2:20:11\n03:19\nDubai (UAE)\n\n\n83\nHaftamnesh TESFAYE\nETH\n2:20:13\n03:19\nDubai (UAE)\n\n\n84\nPrisca JEPTOO\nKEN\n2:20:14\n03:19\nLondon (GBR)\n\n\n85\nPurity Cherotich RIONORIPO\nKEN\n2:20:14\n03:19\nPraha (CZE)\n\n\n86\nMaurine CHEPKEMOI\nKEN\n2:20:18\n03:19\nAmsterdam (NED)\n\n\n87\nVivian KIPLAGAT\nKEN\n2:20:18\n03:19\nMilano (ITA)\n\n\n88\nHaven Hailu DESSE\nETH\n2:20:19\n03:19\nAmsterdam (NED)\n\n\n89\nMary Wacera NGUGI\nKEN\n2:20:22\n03:19\nLondon (GBR)\n\n\n90\nStella CHESANG\nUGA\n2:20:23\n03:19\nHamburg (GER)\n\n\n91\nMao ICHIYAMA\nJPN\n2:20:29\n03:19\nNagoya (JPN)\n\n\n92\nNazret WELDU\nERI\n2:20:29\n03:19\nAutzen Complex, Eugene, OR (USA)\n\n\n93\nJackline CHELAL\nKEN\n2:20:29\n03:19\nSevilla (ESP)\n\n\n94\nBezunesh BEKELE\nETH\n2:20:30\n03:19\nDubai (UAE)\n\n\n95\nAberu KEBEDE\nETH\n2:20:30\n03:19\nBerlin (GER)\n\n\n96\nSara HALL\nUSA\n2:20:32\n03:19\nChandler, AZ (USA)\n\n\n97\nMeskerem ASSEFA\nETH\n2:20:36\n03:19\nFrankfurt (GER)\n\n\n98\nDolshi TESFU\nERI\n2:20:40\n03:20\nValencia (ESP)\n\n\n99\nBerhane ADERE\nETH\n2:20:42\n03:20\nChicago, IL (USA)\n\n\n100\nTegla LOROUPE\nKEN\n2:20:43\n03:20\nBerlin (GER)\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\n\n\n\nEn la categoría femenina, el panorama no es menos emocionante. Tigst Assefa lidera el ranking con un tiempo formidable de 2:11:53 en Berlín. Las atletas Sifan Hassan, Brigid Kosgei, Ruth Chepngetich y Amane Beriso Shankule completan el top 5, evidenciando la diversidad de talentos y la competitividad en la élite del maratón femenino.\n\nEn el exclusivo grupo de los 100 mejores tiempos oficiales de maratón, se observa una gran variedad de nacionalidades. Para la elaboración del siguiente mapa, se han fusionado los ránquines de los atletas masculinos como femeninos.\n\nCódigo#------Mapa coropletas-----\n\ndata_records_maraton_masc &lt;- data_records_maraton_masc %&gt;%\n  mutate(gender = \"Masc\")\n\ndata_records_maraton_fem &lt;- data_records_maraton_fem %&gt;%\n  mutate(gender = \"Fem\")\n\ndata_records_maraton &lt;- full_join(data_records_maraton_masc, data_records_maraton_fem)\n\n#Obtenemos el mapa y seleccionamos las dos variables que harán falta para unir los dfs y crear el mapa.\n\nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\nworld &lt;- world %&gt;% filter(subregion != \"Antarctica\") %&gt;% filter(admin != \"Greenland\")\nworld &lt;- world %&gt;% select(iso_a3, geometry)\n\n\n#Manipulamos los datos. En este caso, representaremos en un mapa de coropletas las nacionalidades que están entre el top 100 mejores tiempos \n\ndata_mapa&lt;- data_records_maraton%&gt;% group_by(nationality) %&gt;%\n  summarize(NN = n())\n\n#Unimos los dfs y creamos los quintiles\n\ndf_mapa&lt;- full_join(data_mapa, world, by = c(\"nationality\" = \"iso_a3\") ) \n\ndf_mapa &lt;- df_mapa %&gt;% mutate(nacionalidades_5 = ntile(NN, 5))  \ndf_mapa$nacionalidades_5 &lt;- as.factor(df_mapa$nacionalidades_5)\n\n\n#Creamos el mapa de coropletas\n\np1 &lt;- ggplot(df_mapa) +\n  geom_sf(aes(geometry = geometry, fill = nacionalidades_5)) +\n  scale_fill_brewer(palette = \"Oranges\", name = NULL, labels = c(\"1er quintil\", \"2do quintil\", \"3er quintil\", \"4to quintil\", \"5to quintil\")) + \n  theme_fivethirtyeight() +\n  labs(title = \"Distribución nacionalidades top 100\", subtitle = \"(masculino y femenino)\" , caption = \"Elaboración propia a partir de datos extraídos de World Athletics\") + \n  theme(axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.ticks = element_blank()) +\n  scale_y_continuous(breaks = NULL) + \n  scale_x_continuous(breaks = NULL)\n\np1\n\n\n\n\n\n\n\nEste mapa coroplético ofrece una visión visualmente impactante de la distribución geográfica de las nacionalidades de los mejores maratonistas. Emerge claramente el dominio incuestionable de Kenia y Etiopía, que lideran con contundencia el ranking. Kenia, reconocida por su tradición en corredores de fondo, y Etiopía, cuna de atletas legendarios, se destacan consolidando su presencia en el podio de los mejores tiempos. La frecuencia con la que estos países aparecen refleja la fortaleza de sus programas de entrenamiento y la dedicación de sus atletas hacia la excelencia en el maratón.\nDetrás de este dúo imponente, otras naciones también han dejado su huella en este selecto grupo. Japón, con su propia tradición en carreras de larga distancia, se presenta como un contendiente fuerte, mientras que Estados Unidos ha logrado asegurar un lugar notable en este exclusivo ranking.\nAdemás, es digno de mención cómo otras naciones emergen con una o varias apariciones en los 100 mejores tiempos. Brasil, China, Israel, Turquía, Holanda, Alemania y Uganda, entre otras, representan la diversidad global de talento en el mundo del maratón. Aunque estas naciones pueden tener menos representantes, su presencia destaca la universalidad del atletismo y la capacidad de atletas de diversas culturas para competir a nivel élite.\nEn definitiva, este mapa coroplético no solo ofrece una visión visualmente impactante de la distribución geográfica de los mejores maratonistas, sino que también subraya la riqueza y la amplitud de la comunidad global de corredores de élite.\n\n\nCódigo#Ciudades que más aparecen entre el top 100 (oficial)-----\n\n#En primer lugar, arreglo el df\n\ndata_ciudades_records_maraton_masc &lt;- data_records_maraton_masc %&gt;%\n  group_by(marathon) %&gt;%\n  summarize(NN = n()) %&gt;%\n  ungroup() %&gt;%\n  slice_max(n = 3, NN) %&gt;%\n  arrange(desc(NN))\n\ndata_ciudades_records_maraton_fem &lt;- data_records_maraton_fem %&gt;%\n  group_by(marathon) %&gt;%\n  summarize(NN = n()) %&gt;%\n  ungroup() %&gt;%\n  slice_max(n = 3, NN) %&gt;%\n  arrange(desc(NN))\n\n\n\n\n# Ordenar data_ciudades_records_maraton_masc de mayor a menor NN\ndata_ciudades_records_maraton_masc &lt;- data_ciudades_records_maraton_masc %&gt;%\n  mutate(marathon = factor(marathon, levels = marathon[order(NN, decreasing = TRUE)]))\n\n# Gráfico para hombres\np3 &lt;- ggplot(data_ciudades_records_maraton_masc, aes(x = marathon, y = NN)) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  geom_text(aes(label = NN), vjust = -0.5, size = 4) +\n  labs(title = \"Maratones con más apariciones en el top 100 (masc.)\",\n       x = \"Maratón\",\n       y = \"Número de apariciones en el ranking\") +\n  theme_gray()\n\n# Ordenar data_ciudades_records_maraton_fem de mayor a menor NN\ndata_ciudades_records_maraton_fem &lt;- data_ciudades_records_maraton_fem %&gt;%\n  mutate(marathon = factor(marathon, levels = marathon[order(NN, decreasing = TRUE)]))\n\n# Gráfico para mujeres\np2 &lt;- ggplot(data_ciudades_records_maraton_fem, aes(x = marathon, y = NN)) +\n  geom_bar(stat = \"identity\", fill = \"pink\") +\n  geom_text(aes(label = NN), vjust = -0.5, size = 4) +\n  labs(title = \"Maratones con más apariciones en el top 100 (fem.)\") +\n  theme_gray()\n\n\np3 + xlab(\"Maratón\") + ylab (\"Nº apariciones en el ranking\")\np2 + xlab(\"Maratón\") + ylab (\"Nº apariciones en el ranking\")"
  },
  {
    "objectID": "my_trabajo_BigData.html#las-six-majors",
    "href": "my_trabajo_BigData.html#las-six-majors",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "2) Las Six Majors",
    "text": "2) Las Six Majors\nLas “Six Majors” representan un prestigioso conjunto de seis maratones internacionales de renombre en el mundo del atletismo. Originalmente, esta serie (por aquel entonces conocida como las “Five Majors”) incluía los maratones de Boston, Nueva York, Chicago, Berlín y Londres. Sin embargo, en 2013, la incorporación del Maratón de Tokio ha transformado el conjunto en las “Six Majors”. Existe cierta especulación acerca de la posible inclusión de la séptima “Major”. Muchos reclaman la incorporación del maratón de Valencia como séptima “Major”, no obstante, algunas fuentes sugieren que Sídney podría ser la próxima incorporación.\nLa “Major” más veloz\n\nCódigo#La más rápida de las six majors------\n\n#Versión masculina\nfastest_major_masc &lt;- data_majors %&gt;% \n  filter(gender == \"Male\") %&gt;%\n  group_by(marathon)%&gt;%\n  summarise(media_tiempo_total = mean(time_in_seconds)) %&gt;%\n  mutate(media_tiempo_total_hms = sprintf(\"%02d:%02d:%02d\",\n                                          as.integer(floor(media_tiempo_total / 3600)),\n                                          as.integer((media_tiempo_total %% 3600) / 60),\n                                          as.integer(media_tiempo_total %% 60))) %&gt;%\n  arrange(media_tiempo_total) %&gt;%\n  select(- \"media_tiempo_total\") %&gt;%\n  rename(maraton = marathon, \"tiempo medio del ganador\" = media_tiempo_total_hms) %&gt;%\n  mutate(Ranking = c(1:6), .before = maraton)\n\n\ntabla_fastest_major_masc &lt;- fastest_major_masc %&gt;%\n  kable(\"html\", align = \"c\", caption = \"TIEMPO MEDIO HISTÓRICO DE LOS GANADORES DE LAS SIX MAJORS (masc)\") %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), htmltable_class = \"lightable-material\") %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = T) %&gt;%\n  scroll_box(width = \"100%\", height = \"425px\")\n\ntabla_fastest_major_masc\n\n\n\nTIEMPO MEDIO HISTÓRICO DE LOS GANADORES DE LAS SIX MAJORS (masc)\n\nRanking\nmaraton\ntiempo medio del ganador\n\n\n\n1\nTokyo\n02:07:30\n\n\n2\nLondon\n02:07:42\n\n\n3\nChicago\n02:09:40\n\n\n4\nBerlin\n02:10:52\n\n\n5\nNYC\n02:11:44\n\n\n6\nBoston\n02:21:50\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\n\nCódigo#Versión femenina\n\nfastest_major_fem &lt;- data_majors %&gt;% \n  filter(gender == \"Female\") %&gt;%\n  group_by(marathon)%&gt;%\n  summarise(media_tiempo_total = mean(time_in_seconds)) %&gt;%\n  mutate(media_tiempo_total_hms = sprintf(\"%02d:%02d:%02d\",\n                                          as.integer(floor(media_tiempo_total / 3600)),\n                                          as.integer((media_tiempo_total %% 3600) / 60),\n                                          as.integer(media_tiempo_total %% 60))) %&gt;%\n  arrange(media_tiempo_total) %&gt;%\n  select(- \"media_tiempo_total\") %&gt;%\n  rename(maraton = marathon, \"tiempo medio del ganador\" = media_tiempo_total_hms) %&gt;%\n  mutate(Ranking = c(1:6), .before = maraton) \n\n\ntabla_fastest_major_fem &lt;- fastest_major_fem %&gt;%\n  kable(\"html\", align = \"c\", caption = \"TIEMPO MEDIO HISTÓRICO DE LOS GANADORES DE LAS SIX MAJORS (fem)\") %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), htmltable_class = \"lightable-material\") %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = T) %&gt;%\n  scroll_box(width = \"100%\", height = \"425px\")\n\ntabla_fastest_major_fem\n\n\n\nTIEMPO MEDIO HISTÓRICO DE LOS GANADORES DE LAS SIX MAJORS (fem)\n\nRanking\nmaraton\ntiempo medio del ganador\n\n\n\n1\nLondon\n02:23:36\n\n\n2\nTokyo\n02:26:07\n\n\n3\nChicago\n02:29:53\n\n\n4\nNYC\n02:30:06\n\n\n5\nBerlin\n02:31:38\n\n\n6\nBoston\n02:35:31\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\nEn esta sección se analiza el tiempo promedio que han tardado los ganadores de cada edición de las “Six Majors” en llegar a meta. Para ello se han elaborado estas tablas, que diferencian los tiempos promedio para la categoría masculina y la categoría femenina.\nTeniendo en cuenta los tiempos medios de la categoría masculina, parece ser que Tokio y Londres son las más veloces con tan solo 12 segundos de diferencia entre sí. En general, el tiempo promedio de los ganadores en meta es cercano a las 2 horas, para todas las “Majors”, tan solo se observa una diferencia de unos 14 minutos entre el maratón de Tokio y el de Boston. Para el caso de las mujeres, Londres encabeza el ranking y nuevamente el maratón de Boston se encuentra en la cola. En esta categoría el diferencial entre Londres y Boston es ligeramente menor.\nLlama la atención que el maratón de Boston se encuentra en la cola tanto en la categoría masculina como femenina. Esto en gran medida se puede atribuir al hecho de que se trata del maratón más antiguo de las “Six Majors” y los tiempos en meta durante los primeros años elevan el promedio que se analiza en esta sección. De hecho, en la categoría masculina, se observa que el maratón de Boston tiene un promedio que supera por 10 minutos al de Nueva York. En la categoría femenina, esa diferencia es mucho menor (unos 4 minutos), probablemente porque la participación femenina es más reciente y consiguieron mejorar sus tiempos en meta en menos tiempo que los hombres. Esto puede verse en este gráfico.\nMaratonianos que más majors han ganado\n\nCódigo#Ganadores y ganadoras más repetidos----------------\nganadores_majors &lt;- data_majors %&gt;%\n  group_by(athlete) %&gt;%\n  summarise(NN = n()) %&gt;%\n  ungroup() %&gt;%\n  filter(NN &gt;= 2) %&gt;%\n  arrange(desc(NN)) %&gt;%\n  distinct(athlete, .keep_all = TRUE) \n\nganadores_majors &lt;- left_join(ganadores_majors, data_majors, by = \"athlete\") %&gt;%\n  select(athlete, NN, gender, nationality) %&gt;%\n  distinct(athlete, .keep_all = TRUE) %&gt;%\n  rename(\"Majors\" = NN)\n\nganadores_majors$athlete &lt;- iconv(ganadores_majors$athlete, from = \"UTF-8\", to = \"UTF-8\")\nganadores_majors &lt;- na.omit(ganadores_majors)\n\ntabla_ganadores_majors &lt;- ganadores_majors %&gt;%\n  kable(\"html\", align = \"l\", caption = \"ATLETAS QUE HAN GANADO UNA MAJOR MÁS DE UNA VEZ\", escape = FALSE) %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), htmltable_class = \"lightable-material\") %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = TRUE)  %&gt;%\n  scroll_box(width = \"100%\", height = \"500px\") \n\ntabla_ganadores_majors\n\n\n\nATLETAS QUE HAN GANADO UNA MAJOR MÁS DE UNA VEZ\n\nathlete\nMajors\ngender\nnationality\n\n\n\nGrete Waitz\n11\nFemale\nNorway\n\n\nBill Rodgers\n8\nMale\nUnited States\n\n\nIngrid Kristiansen\n8\nFemale\nNorway\n\n\nClarence DeMar\n7\nMale\nUnited States\n\n\nPaula Radcliffe\n7\nFemale\nUnited Kingdom\n\n\nUta Pippig\n7\nFemale\nGermany\n\n\nCatherine Ndereba\n6\nFemale\nKenya\n\n\nEliud Kipchoge\n6\nMale\nKenya\n\n\nMary Keitany\n6\nFemale\nKenya\n\n\nRosa Mota\n6\nFemale\nPortugal\n\n\nJoyce Chepchumba\n5\nFemale\nKenya\n\n\nKhalid Khannouchi\n5\nMale\nUnited States\n\n\nMartin Lel\n5\nMale\nKenya\n\n\nWilson Kipsang\n5\nMale\nKenya\n\n\nAberu Kebede\n4\nFemale\nEthiopia\n\n\nAlberto Salazar\n4\nMale\nUnited States\n\n\nFlorence Kiplagat\n4\nFemale\nKenya\n\n\nGeoffrey Mutai\n4\nMale\nKenya\n\n\nHaile Gebrselassie\n4\nMale\nEthiopia\n\n\nIbrahim Hussein\n4\nMale\nKenya\n\n\nIrina Mikitenko\n4\nFemale\nGermany\n\n\nMargaret Okayo\n4\nFemale\nKenya\n\n\nMiki Gorman\n4\nFemale\nUnited States\n\n\nRita Jeptoo\n4\nFemale\nKenya\n\n\nRobert Kipkoech Cheruiyot\n4\nMale\nKenya\n\n\nSteve Jones\n4\nMale\nUnited Kingdom\n\n\nToshihiko Seko\n4\nMale\nJapan\n\n\nAbdelkader El Mouaziz\n3\nMale\nMorocco\n\n\nAtsede Baysa\n3\nFemale\nEthiopia\n\n\nBobbi Gibb\n3\nFemale\nUnited States\n\n\nCosmas Ndeti\n3\nMale\nKenya\n\n\nDennis Kimetto\n3\nMale\nKenya\n\n\nDickson Chumba\n3\nMale\nKenya\n\n\nEdna Kiplagat\n3\nFemale\nKenya\n\n\nEino Oksanen\n3\nMale\nFinland\n\n\nEvans Rutto\n3\nMale\nKenya\n\n\nFatuma Roba\n3\nFemale\nEthiopia\n\n\nFelix Limo\n3\nMale\nKenya\n\n\nIngo Sensburg\n3\nMale\nGermany\n\n\nJoan Benoit\n3\nFemale\nUnited States\n\n\nJutta von Haase\n3\nFemale\nGermany\n\n\nLeslie S. Pawson\n3\nMale\nUnited States\n\n\nNina Kuscsik\n3\nFemale\nUnited States\n\n\nRenata Kokowska\n3\nFemale\nPoland\n\n\nSamuel Wanjiru\n3\nMale\nKenya\n\n\nSara Mae Berman\n3\nFemale\nUnited States\n\n\nTegla Loroupe\n3\nFemale\nKenya\n\n\nTsegaye Kebede\n3\nMale\nEthiopia\n\n\nWanda Panfil\n3\nFemale\nPoland\n\n\nAllison Roe\n2\nFemale\nNew Zealand\n\n\nAtsede Habtamu\n2\nFemale\nEthiopia\n\n\nBerhane Adere\n2\nFemale\nEthiopia\n\n\nBirhane Dibaba\n2\nFemale\nEthiopia\n\n\nCatherina McKiernan\n2\nFemale\nIreland\n\n\nCharlotte Teske\n2\nFemale\nGermany\n\n\nDan Cloeter\n2\nMale\nUnited States\n\n\nDeena Kastor\n2\nFemale\nUnited States\n\n\nDerartu Tulu\n2\nFemale\nEthiopia\n\n\nDouglas Wakiihuri\n2\nMale\nKenya\n\n\nEamonn Martin\n2\nMale\nUnited Kingdom\n\n\nElijah Lagat\n2\nMale\nKenya\n\n\nEllison Brown\n2\nMale\nUnited States\n\n\nGeoff Smith\n2\nMale\nUnited Kingdom\n\n\nGete Wami\n2\nFemale\nEthiopia\n\n\nGladys Cherono\n2\nFemale\nKenya\n\n\nGreg Meyer\n2\nMale\nUnited States\n\n\nJack Caffery\n2\nMale\nCanada\n\n\nJelena Prokopcuka\n2\nFemale\nLatvia\n\n\nJohn A. Kelley\n2\nMale\nUnited States\n\n\nJohn Kagwe\n2\nMale\nKenya\n\n\nJohnny Miles\n2\nMale\nCanada\n\n\nJoseph Chebet\n2\nMale\nKenya\n\n\nJoyce Smith\n2\nFemale\nUnited Kingdom\n\n\nKim Merritt\n2\nFemale\nUnited States\n\n\nLelisa Desisa Benti\n2\nMale\nEthiopia\n\n\nLidiya Grigoryeva\n2\nFemale\nRussia\n\n\nLisa Weidenbach\n2\nFemale\nUnited States\n\n\nLiz McColgan\n2\nFemale\nUnited Kingdom\n\n\nMarian Sutton\n2\nFemale\nUnited Kingdom\n\n\nMeb Keflezighi\n2\nMale\nUnited States\n\n\nMoses Tanui\n2\nMale\nKenya\n\n\nNaoko Takahashi\n2\nFemale\nJapan\n\n\nOlga Markova\n2\nFemale\nRussia\n\n\nOrlando Pizzolato\n2\nMale\nItaly\n\n\nPatrick Musyoki\n2\nMale\nKenya\n\n\nPaul Tergat\n2\nMale\nKenya\n\n\nPriscah Jeptoo\n2\nFemale\nKenya\n\n\nRitva Lemettinen\n2\nFemale\nFinland\n\n\nRodgers Rop\n2\nMale\nKenya\n\n\nSuleiman Nyambui\n2\nMale\nTanzania\n\n\nSvetlana Zakharova\n2\nFemale\nRussia\n\n\nTirfi Tsegaye\n2\nFemale\nEthiopia\n\n\nTom Fleming\n2\nMale\nUnited States\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\n\nEn esta sección nos centramos en aquellos atletas que han conseguido ganar más de una vez alguna de las “Six Majors”. En concreto, se muestran los cinco atletas que en más ocasiones las han ganado.\nLa noruega Grete Waitz, con 11 “Majors” ganadas, es la atleta que encabeza este particular listado. En este ranking no se encuentra fácilmente un atleta que continúe en activo hoy en día. Esto demuestra que los maratones y las pruebas del atletismo en general se han convertido cada vez en eventos más competitivos y exigentes para los atletas."
  },
  {
    "objectID": "my_trabajo_BigData.html#conclusiones",
    "href": "my_trabajo_BigData.html#conclusiones",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "Conclusiones",
    "text": "Conclusiones\nEste análisis revela la evolución del maratón y la búsqueda incansable de la excelencia por parte de corredores de élite, desafiando las barreras temporales. Con cada nueva marca y récord superado, el maratón persiste como símbolo de perseverancia y un recordatorio inspirador de que siempre hay nuevos horizontes por explorar en la búsqueda incansable de la excelencia atlética.\nAl enfrentarme a la tarea de realizar este trabajo individual he podido experimentar, aún más si cabe, la versatilidad y el potencial de las herramientas con las que hemos trabajado a lo largo del curso. A pesar de haberme encontrado con ciertos desafíos, he disfrutado de este trabajo y me ha servido para reforzar los conocimientos adquiridos en esta asignatura.\nEspero que te haya gustado!!!\nPd: Por si te interesa, este es el aftermovie del maratón Valencia 2023"
  },
  {
    "objectID": "my_trabajo_BigData.html#introducción",
    "href": "my_trabajo_BigData.html#introducción",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "Introducción",
    "text": "Introducción\nEl maratón, con una distancia oficial de 42.195 metros, se destaca como una de las pruebas más emblemáticas y reconocidas dentro del atletismo. En el universo de las maratones, destacan las “Six Majors”, una élite de seis maratones considerados los más prestigiosos del mundo. Esta selección incluye las ciudades de Boston, Nueva York, Chicago, Berlín, Londres y Tokio.\nEn este trabajo, nos adentramos en el análisis de los 100 mejores tiempos oficiales en los que se ha completado la distancia del maratón. Exploraremos cómo se distribuyen las nacionalidades de los atletas que ocupan este destacado ranking y qué maratones son más frecuentes en este exclusivo grupo. Además, nos sumergiremos en el seno de las “Six Majors”, examinando el tiempo medio y los cinco atletas que más veces han alcanzado la victoria en alguna de las “Majors”. Finalmente, dirigiremos nuestra atención hacia el Maratón de Boston, explorando la evolución del ritmo medio en el cual los ganadores han completado cada edición a lo largo del tiempo. Este análisis detallado permitirá comprender las dinámicas cambiantes y estrategias adoptadas por los corredores en uno de los eventos más antiguos y emblemáticos del atletismo mundial.\nDefiniciones\n\nRitmo medio en carrera: Velocidad promedio a la cual un corredor completa la distancia durante todo el evento. Este indicador se calcula dividiendo la distancia total de la carrera por el tiempo total empleado.\nTop 100 mejores tiempos en maratón: Selección de los 100 mejores tiempos (oficiales) registrados en la historia de esta disciplina atlética. Estos tiempos destacados representan el rendimiento más excepcional y rápido entre todos los corredores, lo que convierte a este grupo en una referencia significativa para evaluar la élite del mundo del maratón.\nSix Majors: Conjunto de las seis maratones más prestigiosas a nivel mundial. Se incluyen los eventos celebrados en las ciudades de Boston, Nueva York, Chicago, Berlín, Londres y Tokio."
  },
  {
    "objectID": "my_trabajo_BigData.html#analizando-los-mejores-tiempos-de-los-maratonianos",
    "href": "my_trabajo_BigData.html#analizando-los-mejores-tiempos-de-los-maratonianos",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "1) Analizando los mejores tiempos de los maratonianos",
    "text": "1) Analizando los mejores tiempos de los maratonianos\nTop 100 mejores tiempos (oficiales) en maratón\n\nCódigo#Ranking top 100----\n\n\n# En primer lugar, arreglo los datos para la tabla. Selecciono las variables que quiero representar\ntop100_masc &lt;- head(data_records_maraton_masc, 100) %&gt;%\n  mutate(position = c(1:100)) %&gt;%\n  select(position, athlete, nationality, time, marathon) %&gt;%\n  setNames(toupper(names(.)))\n\n\n# Creamos la tabla del top  mejores tiempos masculinos\n\ntabla_top100_masc &lt;- top100_masc %&gt;%\n  kable(\"html\", align = \"l\", caption = \"TOP 100 MEJORES TIEMPOS DE MARATÓN MASCULINO\") %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), htmltable_class = \"lightable-material\") %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = T) %&gt;%\n  scroll_box(width = \"100%\", height = \"375px\")\n\ntabla_top100_masc\n\n\n\nTOP 100 MEJORES TIEMPOS DE MARATÓN MASCULINO\n\nPOSITION\nATHLETE\nNATIONALITY\nTIME\nMARATHON\n\n\n\n1\nKIPTUM\nKEN\n2:00:35\nChicago, IL (USA)\n\n\n2\nKIPCHOGE\nKEN\n2:01:09\nBerlin (GER)\n\n\n3\nBEKELE\nETH\n2:01:41\nBerlin (GER)\n\n\n4\nLEMMA\nETH\n2:01:48\nValencia (ESP)\n\n\n5\nLEGESE\nETH\n2:02:48\nBerlin (GER)\n\n\n6\nGEREMEW\nETH\n2:02:55\nLondon (GBR)\n\n\n7\nKIMETTO\nKEN\n2:02:57\nBerlin (GER)\n\n\n8\nCHEBET\nKEN\n2:03:00\nValencia (ESP)\n\n\n9\nGerald\nTAN\n2:03:00\nValencia (ESP)\n\n\n10\nCHERONO\nKEN\n2:03:04\nValencia (ESP)\n\n\n11\nMutiso\nKEN\n2:03:11\nValencia (ESP)\n\n\n12\nMUTAI\nKEN\n2:03:13\nBerlin (GER)\n\n\n13\nKipsang\nKEN\n2:03:13\nBerlin (GER)\n\n\n14\nKIPRUTO\nKEN\n2:03:13\nTokyo (JPN)\n\n\n15\nKipkemoi\nKEN\n2:03:13\nBerlin (GER)\n\n\n16\nWASIHUN\nETH\n2:03:16\nLondon (GBR)\n\n\n17\nTAKELE\nETH\n2:03:24\nBerlin (GER)\n\n\n18\nMOLLA\nETH\n2:03:34\nDubai (UAE)\n\n\n19\nABDI\nBEL\n2:03:36\nRotterdam (NED)\n\n\n20\nMakau\nKEN\n2:03:38\nBerlin (GER)\n\n\n21\nTOLA\nETH\n2:03:39\nAmsterdam (NED)\n\n\n22\nNEGASA\nETH\n2:03:40\nDubai (UAE)\n\n\n23\nIdemo\nETH\n2:03:46\nBerlin (GER)\n\n\n24\nWOLDE\nETH\n2:03:48\nValencia (ESP)\n\n\n25\nKIPLAGAT\nKEN\n2:03:50\nRotterdam (NED)\n\n\n26\nKipleting\nKEN\n2:03:51\nLondon (GBR)\n\n\n27\nATANAW\nETH\n2:03:51\nValencia (ESP)\n\n\n28\nKiprop\nKEN\n2:03:55\nMilano (ITA)\n\n\n29\nGEBRSELASSIE\nETH\n2:03:59\nBerlin (GER)\n\n\n30\nGEBRESILASE\nETH\n2:04:02\nDubai (UAE)\n\n\n31\nKIPRUTO\nKEN\n2:04:02\nChicago, IL (USA)\n\n\n32\nKIPSEREM\nKEN\n2:04:04\nRotterdam (NED)\n\n\n33\nMENGSTU\nETH\n2:04:06\nDubai (UAE)\n\n\n34\nKiprop\nKEN\n2:04:09\nAmsterdam (NED)\n\n\n35\nMUTAI\nKEN\n2:04:15\nBerlin (GER)\n\n\n36\nKigen\nTUR\n2:04:16\nValencia (ESP)\n\n\n37\nKIPTUM\nKEN\n2:04:17\nMilano (ITA)\n\n\n38\nBELET\nKEN\n2:04:18\nAmsterdam (NED)\n\n\n39\nROTICH\nKEN\n2:04:21\nParis (FRA)\n\n\n40\nKORIR\nKEN\n2:04:22\nBerlin (GER)\n\n\n41\nABSHERO\nETH\n2:04:23\nDubai (UAE)\n\n\n42\nKAMWOROR\nKEN\n2:04:23\nLondon (GBR)\n\n\n43\nABERA\nETH\n2:04:24\nDubai (UAE)\n\n\n44\nKIBET\nKEN\n2:04:27\nRotterdam (NED)\n\n\n45\nKipsang\nKEN\n2:04:27\nRotterdam (NED)\n\n\n46\nKITWARA\nKEN\n2:04:28\nChicago, IL (USA)\n\n\n47\nKIPCHUMBA\nKEN\n2:04:28\nLondon (GBR)\n\n\n48\nTURA\nETH\n2:04:29\nMilano (ITA)\n\n\n49\nMEKONNEN\nETH\n2:04:32\nDubai (UAE)\n\n\n50\nCHUMBA\nKEN\n2:04:32\nChicago, IL (USA)\n\n\n51\nKipleting\nKEN\n2:04:32\nAmsterdam (NED)\n\n\n52\nLEMI\nETH\n2:04:33\nDubai (UAE)\n\n\n53\nKOTUT\nKEN\n2:04:34\nAmsterdam (NED)\n\n\n54\nTEWELDE\nERI\n2:04:35\nAmsterdam (NED)\n\n\n55\nKIBET\nKEN\n2:04:37\nAmsterdam (NED)\n\n\n56\nKEBEDE\nETH\n2:04:38\nChicago, IL (USA)\n\n\n57\nDEKSISA\nETH\n2:04:40\nAmsterdam (NED)\n\n\n58\nKIROS\nETH\n2:04:41\nParis (FRA)\n\n\n59\nTEKLU\nETH\n2:04:42\nBerlin (GER)\n\n\n60\nHassan\nBRN\n2:04:43\nValencia (ESP)\n\n\n61\nHIYRDEN\nETH\n2:04:43\nSevilla (ESP)\n\n\n62\nKIPSAMBU\nKEN\n2:04:44\nParis (FRA)\n\n\n63\nBELAY\nETH\n2:04:44\nBerlin (GER)\n\n\n64\nDESISA\nETH\n2:04:45\nDubai (UAE)\n\n\n65\nEKIRU\nKEN\n2:04:46\nMilano (ITA)\n\n\n66\nAYENEW\nETH\n2:04:46\nSevilla (ESP)\n\n\n67\nTSEGAY\nETH\n2:04:48\nRotterdam (NED)\n\n\n68\nSHIFERAW\nETH\n2:04:48\nDubai (UAE)\n\n\n69\nKIPYEGO\nKEN\n2:04:48\nParis (FRA)\n\n\n70\nKISSA\nUGA\n2:04:48\nHamburg (GER)\n\n\n71\nKANDIE\nKEN\n2:04:48\nValencia (ESP)\n\n\n72\nTOLA\nETH\n2:04:49\nDubai (UAE)\n\n\n73\nKITATA\nETH\n2:04:49\nLondon (GBR)\n\n\n74\nGETACHEW\nETH\n2:04:49\nAmsterdam (NED)\n\n\n75\nSEFIR\nETH\n2:04:50\nDubai (UAE)\n\n\n76\nFELEKE\nETH\n2:04:50\nRotterdam (NED)\n\n\n77\nNEGEWO\nETH\n2:04:51\nValencia (ESP)\n\n\n78\nDO\nBRA\n2:04:51\nSeoul (KOR)\n\n\n79\nLILESA\nETH\n2:04:52\nChicago, IL (USA)\n\n\n80\nNEGESSE\nETH\n2:04:52\nDubai (UAE)\n\n\n81\nKiprop\nKEN\n2:04:52\nEindhoven (NED)\n\n\n82\nKipkoech\nKEN\n2:04:53\nValencia (ESP)\n\n\n83\nDESO\nETH\n2:04:53\nValencia (ESP)\n\n\n84\nDEGU\nETH\n2:04:53\nParis (FRA)\n\n\n85\nKIPKORIR\nKEN\n2:04:53\nFrankfurt (GER)\n\n\n86\nGENETI\nETH\n2:04:54\nDubai (UAE)\n\n\n87\nKIPRUTO\nKEN\n2:04:54\nAmsterdam (NED)\n\n\n88\nTERGAT\nKEN\n2:04:55\nBerlin (GER)\n\n\n89\nKipchoge\nKEN\n2:04:56\nBerlin (GER)\n\n\n90\nMAIYO\nKEN\n2:04:56\nDubai (UAE)\n\n\n91\nSUZUKI\nJPN\n2:04:56\nOtsu (JPN)\n\n\n92\nNAGEEYE\nNED\n2:04:56\nRotterdam (NED)\n\n\n93\nKIPLIMO\nKEN\n2:04:56\nBerlin (GER)\n\n\n94\nASMARE\nETH\n2:04:57\nAmsterdam (NED)\n\n\n95\nPETROS\nGER\n2:04:58\nBerlin (GER)\n\n\n96\nBIRHANU\nETH\n2:04:59\nSevilla (ESP)\n\n\n97\nRONO\nKEN\n2:05:00\nToronto (CAN)\n\n\n98\nKIRWA\nKEN\n2:05:01\nMilano (ITA)\n\n\n99\nKORIR\nKEN\n2:05:01\nChicago, IL (USA)\n\n\n100\nGOBENA\nETH\n2:05:01\nDubai (UAE)\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\n\n\nEste análisis de los 100 mejores tiempos revela la constante evolución y la proximidad de los atletas a fronteras aparentemente inalcanzables.\nEn la categoría masculina, la proximidad a la mítica barrera de las 2 horas se ha vuelto más palpable con actuaciones notables. Kelvin Kiptum, con su sorprendente tiempo de 2:00:35 en Chicago, ha acariciado este límite tan simbólico.\nEn este contexto, la figura emblemática de Eliud Kipchoge no puede pasarse por alto. Aunque actualmente ocupa la segunda posición con un tiempo de 2:01:09 en Berlín, su legado es incuestionable dado que, durante 131 semanas, Kipchoge ostentó el récord. Cabe mencionar que Kipchoge, batió el “muro” de las 2 horas con un tiempo de 1:59:40 en el maratón de Viena en 2019. Sin embargo, esta marca no se considera oficial dado que el atleta contó con la asistencia de 41 “pacers” que se turnaban para marcar el ritmo necesario, planteando ciertas controversias en torno a su estatus.\n\nCódigo# Y ahora seguiremos los mismos pasos para la categoría femenina\n\ntop100_fem &lt;- head(data_records_maraton_fem, 100) %&gt;%\n  mutate(position = c(1:100)) %&gt;%\n  select(position, athlete, nationality, time, marathon) %&gt;%\n  setNames(toupper(names(.)))\n\ntabla_top100_fem &lt;- top100_fem %&gt;%\n  kable(\"html\", align = \"l\", caption = \"TOP 100 MEJORES TIEMPOS DE MARATÓN FEMENINO\") %&gt;%\n  kable_styling(full_width = TRUE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), htmltable_class = \"lightable-material\") %&gt;%\n  row_spec(row = 0, extra_css = \"text-align: center; text-transform: uppercase; font-size: 18px; font-weight: bold; background-color: #fbfee9;\") %&gt;%\n  footnote(general = \"Elaboración propia a partir de datos extraídos de World Athletics\", general_title = \" \", footnote_as_chunk = T) %&gt;%\n  scroll_box(width = \"100%\", height = \"375px\")\n\ntabla_top100_fem\n\n\n\nTOP 100 MEJORES TIEMPOS DE MARATÓN FEMENINO\n\nPOSITION\nATHLETE\nNATIONALITY\nTIME\nMARATHON\n\n\n\n1\nASSEFA\nETH\n2:11:53\nBerlin (GER)\n\n\n2\nHASSAN\nNED\n2:13:44\nChicago, IL (USA)\n\n\n3\nKOSGEI\nKEN\n2:14:04\nChicago, IL (USA)\n\n\n4\nCHEPNGETICH\nKEN\n2:14:18\nChicago, IL (USA)\n\n\n5\nBeriso\nETH\n2:14:58\nValencia (ESP)\n\n\n6\nRADCLIFFE\nGBR\n2:15:25\nLondon (GBR)\n\n\n7\nDEGEFA\nETH\n2:15:51\nValencia (ESP)\n\n\n8\nKETEMA\nETH\n2:16:07\nDubai (UAE)\n\n\n9\nAYANA\nETH\n2:16:22\nValencia (ESP)\n\n\n10\nWANJIRU\nKEN\n2:16:28\nTokyo (JPN)\n\n\n11\nGIDEY\nETH\n2:16:49\nValencia (ESP)\n\n\n12\nGEMECHU\nETH\n2:16:56\nTokyo (JPN)\n\n\n13\nJepkosgei\nKEN\n2:17:01\nLondon (GBR)\n\n\n14\nALEMU\nETH\n2:17:09\nChicago, IL (USA)\n\n\n15\nJEPCHIRCHIR\nKEN\n2:17:16\nValencia (ESP)\n\n\n16\nYEHUALAW\nETH\n2:17:23\nHamburg (GER)\n\n\n17\nJEPKOSGEI\nKEN\n2:17:23\nChicago, IL (USA)\n\n\n18\nCHEPKIRUI\nKEN\n2:17:29\nValencia (ESP)\n\n\n19\nTESHOME\nETH\n2:17:36\nValencia (ESP)\n\n\n20\nChemtai\nISR\n2:17:45\nTokyo (JPN)\n\n\n21\nDIBABA\nETH\n2:17:56\nLondon (GBR)\n\n\n22\nTANUI\nKEN\n2:17:57\nAmsterdam (NED)\n\n\n23\nAZIMERAW\nETH\n2:17:58\nLondon (GBR)\n\n\n24\nBEKERE\nETH\n2:17:58\nTokyo (JPN)\n\n\n25\nGEBREKIDAN\nETH\n2:17:59\nValencia (ESP)\n\n\n26\nABAYECHEW\nETH\n2:18:03\nBerlin (GER)\n\n\n27\nChelimo\nROU\n2:18:04\nSeoul (KOR)\n\n\n28\nDIBABA\nETH\n2:18:05\nAmsterdam (NED)\n\n\n29\nAGA\nETH\n2:18:09\nDongying (CHN)\n\n\n30\nCHERONO\nKEN\n2:18:11\nBerlin (GER)\n\n\n31\nGEBRESLASE\nETH\n2:18:11\nAutzen Complex, Eugene, OR (USA)\n\n\n32\nCHEMUTAI\nKEN\n2:18:11\nValencia (ESP)\n\n\n33\nAsefa\nETH\n2:18:12\nSeoul (KOR)\n\n\n34\nJeptum\nKEN\n2:18:20\nAutzen Complex, Eugene, OR (USA)\n\n\n35\nBELETE\nETH\n2:18:21\nAmsterdam (NED)\n\n\n36\nSISSON\nUSA\n2:18:29\nChicago, IL (USA)\n\n\n37\nDEREJE\nETH\n2:18:30\nValencia (ESP)\n\n\n38\nJepkemei\nKEN\n2:18:31\nLondon (GBR)\n\n\n39\nABREHA\nETH\n2:18:33\nValencia (ESP)\n\n\n40\nDIBABA\nETH\n2:18:35\nTokyo (JPN)\n\n\n41\nSHAURI\nTAN\n2:18:41\nBerlin (GER)\n\n\n42\nNDEREBA\nKEN\n2:18:47\nChicago, IL (USA)\n\n\n43\nMESFIN\nETH\n2:18:47\nValencia (ESP)\n\n\n44\nEDESA\nETH\n2:18:51\nBerlin (GER)\n\n\n45\nGIRMA\nETH\n2:18:52\nValencia (ESP)\n\n\n46\nGELANA\nETH\n2:18:58\nRotterdam (NED)\n\n\n47\nYIMER\nETH\n2:19:07\nBerlin (GER)\n\n\n48\nJEMELI\nKEN\n2:19:10\nFrankfurt (GER)\n\n\n49\nNOGUCHI\nJPN\n2:19:12\nBerlin (GER)\n\n\n50\nD'AMATO\nUSA\n2:19:12\nHouston, TX (USA)\n\n\n51\nMIKITENKO\nGER\n2:19:19\nBerlin (GER)\n\n\n52\nTEFERI\nETH\n2:19:21\nBerlin (GER)\n\n\n53\nNIIYA\nJPN\n2:19:24\nHouston, TX (USA)\n\n\n54\nDIDA\nETH\n2:19:24\nBerlin (GER)\n\n\n55\nGETACHEW\nETH\n2:19:27\nFrankfurt (GER)\n\n\n56\nFeyse\nETH\n2:19:30\nDubai (UAE)\n\n\n57\nMEDESSA\nETH\n2:19:31\nDubai (UAE)\n\n\n58\nJELAGAT\nKEN\n2:19:31\nValencia (ESP)\n\n\n59\nTUSA\nETH\n2:19:33\nHouston, TX (USA)\n\n\n60\nKabuu\nKEN\n2:19:34\nDubai (UAE)\n\n\n61\nKASTOR\nUSA\n2:19:36\nLondon (GBR)\n\n\n62\nMELESE\nETH\n2:19:36\nDubai (UAE)\n\n\n63\nSUN\nCHN\n2:19:39\nBeijing (CHN)\n\n\n64\nSHIBUI\nJPN\n2:19:41\nBerlin (GER)\n\n\n65\nTSEGAYE\nETH\n2:19:41\nDubai (UAE)\n\n\n66\nKIPLAGAT\nKEN\n2:19:44\nBerlin (GER)\n\n\n67\nBEKELE\nETH\n2:19:44\nBerlin (GER)\n\n\n68\nTAKAHASHI\nJPN\n2:19:46\nBerlin (GER)\n\n\n69\nCHEPCHIRCHIR\nKEN\n2:19:47\nTokyo (JPN)\n\n\n70\nNgeringwony\nKEN\n2:19:50\nLondon (GBR)\n\n\n71\nABEBAYAHAU\nETH\n2:19:50\nAmsterdam (NED)\n\n\n72\nZHOU\nCHN\n2:19:51\nSeoul (KOR)\n\n\n73\nDIBABA\nETH\n2:19:52\nDubai (UAE)\n\n\n74\nJOHANNES\nNAM\n2:19:52\nValencia (ESP)\n\n\n75\nCHEPNGENO\nKEN\n2:19:55\nHouston, TX (USA)\n\n\n76\nJeptoo\nKEN\n2:19:57\nChicago, IL (USA)\n\n\n77\nChebichii\nBRN\n2:20:02\nSeoul (KOR)\n\n\n78\nJepchirchir\nKEN\n2:20:02\nAmsterdam (NED)\n\n\n79\nWOLDU\nETH\n2:20:03\nValencia (ESP)\n\n\n80\nChepyego\nKEN\n2:20:03\nBarcelona (ESP)\n\n\n81\nCHEPCHIRCHIR\nKEN\n2:20:10\nSeoul (KOR)\n\n\n82\nShone\nETH\n2:20:11\nDubai (UAE)\n\n\n83\nTESFAYE\nETH\n2:20:13\nDubai (UAE)\n\n\n84\nJEPTOO\nKEN\n2:20:14\nLondon (GBR)\n\n\n85\nCherotich\nKEN\n2:20:14\nPraha (CZE)\n\n\n86\nCHEPKEMOI\nKEN\n2:20:18\nAmsterdam (NED)\n\n\n87\nKIPLAGAT\nKEN\n2:20:18\nMilano (ITA)\n\n\n88\nHailu\nETH\n2:20:19\nAmsterdam (NED)\n\n\n89\nWacera\nKEN\n2:20:22\nLondon (GBR)\n\n\n90\nCHESANG\nUGA\n2:20:23\nHamburg (GER)\n\n\n91\nICHIYAMA\nJPN\n2:20:29\nNagoya (JPN)\n\n\n92\nWELDU\nERI\n2:20:29\nAutzen Complex, Eugene, OR (USA)\n\n\n93\nCHELAL\nKEN\n2:20:29\nSevilla (ESP)\n\n\n94\nBEKELE\nETH\n2:20:30\nDubai (UAE)\n\n\n95\nKEBEDE\nETH\n2:20:30\nBerlin (GER)\n\n\n96\nHALL\nUSA\n2:20:32\nChandler, AZ (USA)\n\n\n97\nASSEFA\nETH\n2:20:36\nFrankfurt (GER)\n\n\n98\nTESFU\nERI\n2:20:40\nValencia (ESP)\n\n\n99\nADERE\nETH\n2:20:42\nChicago, IL (USA)\n\n\n100\nLOROUPE\nKEN\n2:20:43\nBerlin (GER)\n\n\n\n\n   Elaboración propia a partir de datos extraídos de World Athletics\n\n\n\n\n\n\n\n\n\n\nEn la categoría femenina, el panorama no es menos emocionante. Tigst Assefa lidera el ranking con un tiempo formidable de 2:11:53 en Berlín. Las atletas Sifan Hassan, Brigid Kosgei, Ruth Chepngetich y Amane Beriso Shankule completan el top 5, evidenciando la diversidad de talentos y la competitividad en la élite del maratón femenino.\nNacionalidades de los mejores maratonianos\n\nCódigo#------Mapa coropletas-----\n\ndata_records_maraton_masc &lt;- data_records_maraton_masc %&gt;%\n  mutate(gender = \"Masc\")\n\ndata_records_maraton_fem &lt;- data_records_maraton_fem %&gt;%\n  mutate(gender = \"Fem\")\n\ndata_records_maraton &lt;- full_join(data_records_maraton_masc, data_records_maraton_fem)\n\n#Obtenemos el mapa y seleccionamos las dos variables que harán falta para unir los dfs y crear el mapa.\n\nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\nworld &lt;- world %&gt;% filter(subregion != \"Antarctica\") %&gt;% filter(admin != \"Greenland\")\nworld &lt;- world %&gt;% select(iso_a3, geometry)\n\n\n#Manipulamos los datos. En este caso, representaremos en un mapa de coropletas las nacionalidades que están entre el top 100 mejores tiempos \n\ndata_mapa&lt;- data_records_maraton%&gt;% group_by(nationality) %&gt;%\n  summarize(NN = n())\n\n#Unimos los dfs y creamos los quintiles\n\ndf_mapa&lt;- full_join(data_mapa, world, by = c(\"nationality\" = \"iso_a3\") ) \n\ndf_mapa &lt;- df_mapa %&gt;% mutate(nacionalidades_5 = ntile(NN, 5))  \ndf_mapa$nacionalidades_5 &lt;- as.factor(df_mapa$nacionalidades_5)\n\n\n#Creamos el mapa de coropletas\n\np1 &lt;- ggplot(df_mapa) +\n  geom_sf(aes(geometry = geometry, fill = nacionalidades_5)) +\n  scale_fill_brewer(palette = \"Greens\", name = NULL, labels = c(\"1er quintil\", \"2do quintil\", \"3er quintil\", \"4to quintil\", \"5to quintil\")) + \n  theme_fivethirtyeight() +\n  labs(title = \"DISTRIBUCIÓN NACIONALIDADES TOP 100\", subtitle = \"(masculino y femenino)\" , caption = \"Elaboración propia a partir de datos extraídos de World Athletics\") + \n  theme(axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.ticks = element_blank()) +\n  scale_y_continuous(breaks = NULL) + \n  scale_x_continuous(breaks = NULL) \n\np1\n\n\n\n\n\n\n\nEn el grupo de los 100 mejores tiempos oficiales de maratón, se observa una gran variedad de nacionalidades. Para la elaboración del siguiente mapa, se han fusionado ambos rankings.\nEste mapa coroplético ofrece una visión de la distribución geográfica de las nacionalidades de los mejores maratonistas. Destaca claramente el dominio incuestionable de Kenia y Etiopía, que lideran con contundencia este ranking. Detrás de este dúo imponente, otras naciones también han dejado su huella en este selecto grupo. Japón se presenta como un contendiente fuerte mientras que Estados Unidos también ha logrado asegurar un lugar notable en este exclusivo ranking.\nAdemás, otras naciones como Brasil, China, Israel, Turquía, Holanda, Alemania y Uganda, entre otras, representan la diversidad global de talento en el mundo del maratón. Aunque estas naciones pueden tener menos representantes, su presencia destaca la universalidad del atletismo y la capacidad de atletas de diversas culturas para competir a nivel élite.\nMaratones destacadas en el top 100\n\nCódigo#Ciudades que más aparecen entre el top 100 (oficial)-----\n\ndata_ciudades_records_maraton_masc &lt;- data_records_maraton_masc %&gt;%\n  group_by(marathon) %&gt;%\n  summarize(NN = n()) %&gt;%\n  ungroup() %&gt;%\n  slice_max(n = 3, NN) %&gt;%\n  arrange(desc(NN))\n\ndata_ciudades_records_maraton_fem &lt;- data_records_maraton_fem %&gt;%\n  group_by(marathon) %&gt;%\n  summarize(NN = n()) %&gt;%\n  ungroup() %&gt;%\n  slice_max(n = 3, NN) %&gt;%\n  arrange(desc(NN))\n\n\n\n\n# Ordenar data_ciudades_records_maraton_masc de mayor a menor NN\ndata_ciudades_records_maraton_masc &lt;- data_ciudades_records_maraton_masc %&gt;%\n  mutate(marathon = factor(marathon, levels = marathon[order(NN, decreasing = TRUE)])) %&gt;% rename(\"Apariciones\" = NN)\n\ndata_ciudades_records_maraton_fem &lt;- data_ciudades_records_maraton_fem %&gt;%\n  mutate(marathon = factor(marathon, levels = marathon[order(NN, decreasing = TRUE)]))  %&gt;% rename(\"Apariciones\" = NN)\n\n\ndata_ciudades_records_maraton &lt;- bind_rows(\n  mutate(data_ciudades_records_maraton_masc, genero = \"Masculino\"),\n  mutate(data_ciudades_records_maraton_fem, genero = \"Femenino\")\n)\n\n# Gráfico combinado\n\ncolores &lt;- c(\"Masculino\" = \"#FBFF88\", \"Femenino\" = \"lavender\")\n\n\np_combined &lt;- ggplot(data_ciudades_records_maraton, aes(x = marathon, y = Apariciones)) +\n  geom_bar(stat = \"identity\", aes(fill = genero)) + \n  scale_fill_manual(values = colores) + \n  labs(title = \"MARATONES CON MÁS APARICIONES EN EL TOP 100\",\n       x = \"Maratón\",\n       y = \"Número de apariciones en el ranking\") +\n  theme_minimal() +\n  facet_wrap(~ genero, scales = \"free_y\") + \n  theme(legend.position = \"none\")\n\n\n\n\np_combined_plotly &lt;- p_combined %&gt;%\n  ggplotly(tooltip = c(\"marathon\", \"Apariciones\", \"genero\"))\n\np_combined_plotly\n\n\n\n\n\nAdentrándonos en el análisis detallado de los 100 mejores tiempos oficiales de maratón, exploraremos de cerca los tres maratones que más veces han acogido a los ganadores de sus respectivas ediciones.\nEn la categoría masculina, resaltan con notable presencia las emblemáticas maratones de Berlín, Dubái y Valencia, acumulando 19, 16 y 13 apariciones respectivamente en el selecto grupo de los 100 mejores tiempos oficiales de maratón. En el ámbito femenino, se repiten las mismas ciudades, aunque en distinto orden. Valencia, Berlín y Dubái acumulan 17, 16 y 10 menciones respectivamente. Estas ciudades han logrado forjar su lugar en el calendario mundial del maratón, atrayendo a atletas élite y entusiastas por igual. Esta selección de maratones como protagonistas en el ranking subraya la trascendencia de elementos geográficos, climáticos y organizativos en la excelencia de los atletas de élite en el escenario global del maratón."
  },
  {
    "objectID": "my_trabajo_BigData.html#maratón-de-boston",
    "href": "my_trabajo_BigData.html#maratón-de-boston",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "3) Maratón de Boston",
    "text": "3) Maratón de Boston\nEvolución histórica del ritmo medio de los ganadores de cada edición\n\nCódigo#Evol Boston mejores tiempos------------\n\ndata_boston_fem &lt;- data_boston_fem %&gt;%\n  mutate(gender = \"Fem\")\n\ndata_boston_masc &lt;- data_boston_masc %&gt;%\n  mutate(gender = \"Masc\")\n\ndata_boston &lt;- full_join(data_boston_fem, data_boston_masc) %&gt;%\n  select(year, pace_seconds, pace, gender)\n\ncolores &lt;- c(\"Masc\" = \"palegreen1\", \"Fem\" = \"peachpuff1\")\n\np4 &lt;- ggplot(data_boston, aes(x = year, y = pace_seconds, color = gender)) +\n  geom_line() +\n  scale_color_manual(values = colores) +  \n  labs(\n    title = \"EVOLUCIÓN RITMOS MEDIOS DE LOS GANADORES DE LA MARATÓN DE BOSTON\",\n    x = \"Año\",\n    y = \"Ritmo medio (mm:ss/ km)\",\n    color = \"Género\",\n    caption = \"Elaboración propia a partir de datos extraídos de Kaggle\"\n  ) +\n  theme_minimal(base_family = \"\") + \n  theme(plot.caption = element_text(hjust = 0.5))\n\n\n# Convertir a gráfico interactivo\np_interactivo_4 &lt;- ggplotly(p4, tooltip = c(\"gender\", \"year\", \"pace\"))%&gt;%\n  layout(yaxis = list(range = c(170, 325))) %&gt;%\n  layout(yaxis = list(tickmode = \"array\", tickvals = c(175, 200, 225, 250, 275, 300), ticktext = c(\"2:55\", \"3:20\", \"3:45\", \"4:10\", \"4:35\", \"5:00\")))\n\np_interactivo_4\n\n\n\n\n\nEl primer maratón de Boston tuvo lugar en abril de 1897 y no sólo es el más antiguo de las “Six Majors” sino que también es el más antiguo de los maratones anuales que se celebran al rededor del mundo. En su origen, la distancia de la carrera era, oficialmente y según las normas, de “alrededor de 40 kilómetros”, aunque desde 1924 se ha adoptado la distancia de 42.195 kilómetros. No fue hasta 1972 que las mujeres tuvieron la ocasión de participar en el evento.\nDado que los primeros eventos de este maratón contaban con un recorrido más corto, se han tenido en cuenta para esta sección los ritmos medios (medidos en minutos y segundos que el atleta tarda en completar un kilómetro) de los ganadores y no el tiempo medio que estos han tardado en llegar a meta.\nRespecto a la tendencia de los ritmos medios del ganador de cada edición, se observa como estos caen a lo largo del tiempo en ambas categorías. Llama la atención que la caída inicial de los tiempos medios de la categoría femenina durante los primeros años se produce de manera más abrupta que la que experimentaron los hombres anteriormente. Así mismo se observa como la tendencia en torno a los 3:00/km y los 3:30/km de ritmo medio se ha alcanzo ya desde principios de los años ochenta en ambas categorías."
  },
  {
    "objectID": "my_trabajo_BigData.html#referencias",
    "href": "my_trabajo_BigData.html#referencias",
    "title": "De Nueva York a Tokio: Analizando los Logros en las Six Majors y Más Allá",
    "section": "Referencias",
    "text": "Referencias\nAouita. (2023, 28 diciembre). El Maratón de Valencia se convierte en el séptimo major. La Bolsa del Corredor\nPérez, I. (2019, 12 octubre). Eliud Kipchoge conquista un reto histórico: primer ser humano en bajar de dos horas en maratón. Runner’s World\nDíaz, J. J., Renfree, A., Fernández-Ozcorta, E. J., Torres, M., & Santos-Concejero, J. (2019). Pacing and Performance in the 6 World Marathon Majors\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 11 x64 (build 22621)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2024-01-23\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package           * version date (UTC) lib source\n class               7.3-22  2023-05-03 [2] CRAN (R 4.3.1)\n classInt            0.4-10  2023-09-05 [1] CRAN (R 4.3.1)\n cli                 3.6.1   2023-03-23 [1] CRAN (R 4.3.1)\n clipr               0.8.0   2022-02-22 [1] CRAN (R 4.3.1)\n colorspace          2.1-0   2023-01-23 [1] CRAN (R 4.3.1)\n crosstalk           1.2.0   2021-11-04 [1] CRAN (R 4.3.1)\n data.table          1.14.8  2023-02-17 [1] CRAN (R 4.3.1)\n DBI                 1.1.3   2022-06-18 [1] CRAN (R 4.3.1)\n desc                1.4.2   2022-09-08 [1] CRAN (R 4.3.1)\n details             0.3.0   2022-03-27 [1] CRAN (R 4.3.2)\n digest              0.6.33  2023-07-07 [1] CRAN (R 4.3.1)\n dplyr             * 1.1.3   2023-09-03 [1] CRAN (R 4.3.1)\n e1071               1.7-13  2023-02-01 [1] CRAN (R 4.3.1)\n ellipsis            0.3.2   2021-04-29 [1] CRAN (R 4.3.1)\n evaluate            0.21    2023-05-05 [1] CRAN (R 4.3.1)\n fansi               1.0.4   2023-01-22 [1] CRAN (R 4.3.1)\n farver              2.1.1   2022-07-06 [1] CRAN (R 4.3.1)\n fastmap             1.1.1   2023-02-24 [1] CRAN (R 4.3.1)\n forcats           * 1.0.0   2023-01-29 [1] CRAN (R 4.3.1)\n generics            0.1.3   2022-07-05 [1] CRAN (R 4.3.1)\n ggplot2           * 3.4.4   2023-10-12 [1] CRAN (R 4.3.2)\n ggthemes          * 4.2.4   2021-01-20 [1] CRAN (R 4.3.1)\n glue                1.6.2   2022-02-24 [1] CRAN (R 4.3.1)\n gtable              0.3.4   2023-08-21 [1] CRAN (R 4.3.1)\n here                1.0.1   2020-12-13 [1] CRAN (R 4.3.1)\n highr               0.10    2022-12-22 [1] CRAN (R 4.3.1)\n hms                 1.1.3   2023-03-21 [1] CRAN (R 4.3.1)\n htmltools           0.5.6   2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets         1.6.2   2023-03-17 [1] CRAN (R 4.3.1)\n httr                1.4.7   2023-08-15 [1] CRAN (R 4.3.1)\n jsonlite            1.8.7   2023-06-29 [1] CRAN (R 4.3.1)\n kableExtra        * 1.3.4   2021-02-20 [1] CRAN (R 4.3.2)\n KernSmooth          2.23-21 2023-05-03 [2] CRAN (R 4.3.1)\n knitr             * 1.45    2023-10-30 [1] CRAN (R 4.3.2)\n labeling            0.4.3   2023-08-29 [1] CRAN (R 4.3.1)\n lattice             0.21-8  2023-04-05 [2] CRAN (R 4.3.1)\n lazyeval            0.2.2   2019-03-15 [1] CRAN (R 4.3.1)\n lifecycle           1.0.4   2023-11-07 [1] CRAN (R 4.3.2)\n lubridate         * 1.9.2   2023-02-10 [1] CRAN (R 4.3.1)\n magrittr            2.0.3   2022-03-30 [1] CRAN (R 4.3.1)\n munsell             0.5.0   2018-06-12 [1] CRAN (R 4.3.1)\n pillar              1.9.0   2023-03-22 [1] CRAN (R 4.3.1)\n pkgconfig           2.0.3   2019-09-22 [1] CRAN (R 4.3.1)\n plotly            * 4.10.2  2023-06-03 [1] CRAN (R 4.3.1)\n png                 0.1-8   2022-11-29 [1] CRAN (R 4.3.0)\n proxy               0.4-27  2022-06-09 [1] CRAN (R 4.3.1)\n purrr             * 1.0.2   2023-08-10 [1] CRAN (R 4.3.1)\n R.methodsS3         1.8.2   2022-06-13 [1] CRAN (R 4.3.0)\n R.oo                1.25.0  2022-06-12 [1] CRAN (R 4.3.0)\n R.utils             2.12.2  2022-11-11 [1] CRAN (R 4.3.1)\n R6                  2.5.1   2021-08-19 [1] CRAN (R 4.3.1)\n RColorBrewer      * 1.1-3   2022-04-03 [1] CRAN (R 4.3.0)\n Rcpp                1.0.11  2023-07-06 [1] CRAN (R 4.3.1)\n readr             * 2.1.4   2023-02-10 [1] CRAN (R 4.3.1)\n rio               * 1.0.1   2023-09-19 [1] CRAN (R 4.3.1)\n rlang               1.1.1   2023-04-28 [1] CRAN (R 4.3.1)\n rmarkdown           2.24    2023-08-14 [1] CRAN (R 4.3.1)\n rnaturalearth     * 0.3.4   2023-08-21 [1] CRAN (R 4.3.2)\n rnaturalearthdata * 0.1.0   2017-02-21 [1] CRAN (R 4.3.2)\n rprojroot           2.0.3   2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi          0.15.0  2023-07-07 [1] CRAN (R 4.3.1)\n rvest             * 1.0.3   2022-08-19 [1] CRAN (R 4.3.2)\n scales              1.2.1   2022-08-20 [1] CRAN (R 4.3.2)\n sessioninfo         1.2.2   2021-12-06 [1] CRAN (R 4.3.2)\n sf                  1.0-14  2023-07-11 [1] CRAN (R 4.3.2)\n sp                  2.1-1   2023-10-16 [1] CRAN (R 4.3.2)\n stringi             1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr           * 1.5.0   2022-12-02 [1] CRAN (R 4.3.1)\n svglite             2.1.2   2023-10-11 [1] CRAN (R 4.3.2)\n systemfonts         1.0.4   2022-02-11 [1] CRAN (R 4.3.1)\n tibble            * 3.2.1   2023-03-20 [1] CRAN (R 4.3.1)\n tidyr             * 1.3.0   2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect          1.2.0   2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse         * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)\n timechange          0.2.0   2023-01-11 [1] CRAN (R 4.3.1)\n tzdb                0.4.0   2023-05-12 [1] CRAN (R 4.3.1)\n units               0.8-4   2023-09-13 [1] CRAN (R 4.3.1)\n utf8                1.2.3   2023-01-31 [1] CRAN (R 4.3.1)\n vctrs               0.6.3   2023-06-14 [1] CRAN (R 4.3.1)\n viridisLite         0.4.2   2023-05-02 [1] CRAN (R 4.3.1)\n webshot             0.5.5   2023-06-26 [1] CRAN (R 4.3.1)\n withr               2.5.2   2023-10-30 [1] CRAN (R 4.3.2)\n xfun                0.40    2023-08-09 [1] CRAN (R 4.3.1)\n xml2                1.3.5   2023-07-06 [1] CRAN (R 4.3.1)\n yaml                2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] C:/Users/LENOVO/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────"
  }
]